

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 19 03:52:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0095                     	;# 
   115     0096                     	;# 
   116     0097                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     0105                     	;# 
   126     0107                     	;# 
   127     0108                     	;# 
   128     0109                     	;# 
   129     010C                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0185                     	;# 
   135     0187                     	;# 
   136     0188                     	;# 
   137     0189                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     0007                     	;# 
   148     0008                     	;# 
   149     0009                     	;# 
   150     000A                     	;# 
   151     000B                     	;# 
   152     000C                     	;# 
   153     000D                     	;# 
   154     000E                     	;# 
   155     000E                     	;# 
   156     000F                     	;# 
   157     0010                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0015                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001B                     	;# 
   171     001C                     	;# 
   172     001D                     	;# 
   173     001E                     	;# 
   174     001F                     	;# 
   175     0081                     	;# 
   176     0085                     	;# 
   177     0086                     	;# 
   178     0087                     	;# 
   179     0088                     	;# 
   180     0089                     	;# 
   181     008C                     	;# 
   182     008D                     	;# 
   183     008E                     	;# 
   184     008F                     	;# 
   185     0090                     	;# 
   186     0091                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0095                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009C                     	;# 
   200     009D                     	;# 
   201     009E                     	;# 
   202     009F                     	;# 
   203     0105                     	;# 
   204     0107                     	;# 
   205     0108                     	;# 
   206     0109                     	;# 
   207     010C                     	;# 
   208     010C                     	;# 
   209     010D                     	;# 
   210     010E                     	;# 
   211     010F                     	;# 
   212     0185                     	;# 
   213     0187                     	;# 
   214     0188                     	;# 
   215     0189                     	;# 
   216     018C                     	;# 
   217     018D                     	;# 
   218     0019                     _TXREG	set	25
   219     0018                     _RCSTAbits	set	24
   220     0012                     _T2CONbits	set	18
   221     001D                     _CCP2CONbits	set	29
   222     0017                     _CCP1CONbits	set	23
   223     0009                     _PORTE	set	9
   224     0008                     _PORTD	set	8
   225     0007                     _PORTC	set	7
   226     0006                     _PORTB	set	6
   227     0005                     _PORTA	set	5
   228     001B                     _CCPR2L	set	27
   229     0015                     _CCPR1L	set	21
   230     001E                     _ADRESH	set	30
   231     001F                     _ADCON0bits	set	31
   232     0008                     _PORTDbits	set	8
   233     0009                     _PORTEbits	set	9
   234     0006                     _PORTBbits	set	6
   235     0005                     _PORTAbits	set	5
   236     0001                     _TMR0	set	1
   237     000B                     _INTCONbits	set	11
   238     000C                     _PIR1bits	set	12
   239     0064                     _TXIF	set	100
   240     0098                     _TXSTAbits	set	152
   241     0099                     _SPBRG	set	153
   242     009F                     _ADCON1bits	set	159
   243     0092                     _PR2	set	146
   244     0087                     _TRISCbits	set	135
   245     008C                     _PIE1bits	set	140
   246     008F                     _OSCCONbits	set	143
   247     0081                     _OPTION_REGbits	set	129
   248     0096                     _IOCB	set	150
   249     0089                     _TRISE	set	137
   250     0088                     _TRISD	set	136
   251     0087                     _TRISC	set	135
   252     0086                     _TRISB	set	134
   253     0085                     _TRISA	set	133
   254     010C                     _EEDAT	set	268
   255     010D                     _EEADR	set	269
   256     0187                     _BAUDCTLbits	set	391
   257     0189                     _ANSELH	set	393
   258     0188                     _ANSEL	set	392
   259     018D                     _EECON2	set	397
   260     018C                     _EECON1bits	set	396
   261     0C60                     _RD	set	3168
   262     0C61                     _WR	set	3169
   263                           
   264                           	psect	cinit
   265     000F                     start_initialization:	
   266                           ; #config settings
   267                           
   268     000F                     __initialization:
   269                           
   270                           ; Clear objects allocated to COMMON
   271     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   272     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   273     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   274     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   275     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   276     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279     0015  1283               	bcf	3,5	;RP0=0, select bank0
   280     0016  1303               	bcf	3,6	;RP1=0, select bank0
   281     0017  01BC               	clrf	__pbssBANK0& (0+127)
   282     0018  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   283     0019  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   284     001A  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   285     001B  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   286     001C  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   287     001D  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   288     001E                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291     001E                     __end_of__initialization:
   292     001E  0183               	clrf	3
   293     001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMMON
   296     0070                     __pbssCOMMON:
   297     0070                     _address:
   298     0070                     	ds	2
   299     0072                     _ADC_Voltaje1:
   300     0072                     	ds	2
   301     0074                     _modo:
   302     0074                     	ds	2
   303                           
   304                           	psect	bssBANK0
   305     003C                     __pbssBANK0:
   306     003C                     _ADC_Voltaje4:
   307     003C                     	ds	2
   308     003E                     _ADC_Voltaje3:
   309     003E                     	ds	2
   310     0040                     _ADC_Voltaje2:
   311     0040                     	ds	2
   312     0042                     _option_selected:
   313     0042                     	ds	1
   314                           
   315                           	psect	cstackCOMMON
   316     0076                     __pcstackCOMMON:
   317     0076                     ?_delay:
   318     0076                     ?_write_EEPROM:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0076                     ?_read_EEPROM:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0076                     ??_read_EEPROM:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0076                     ?_setup:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0076                     ?_setupADC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0076                     ?_setupPWM:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0076                     ?_initUART:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0076                     ?_incModo:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0076                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0076                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0076                     write_EEPROM@data:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0076                     read_EEPROM@address:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0076                     delay@sec:	
   355                           ; 1 bytes @ 0x0
   356                           
   357                           
   358                           ; 2 bytes @ 0x0
   359     0076                     	ds	1
   360     0077                     ??_write_EEPROM:
   361     0077                     write_EEPROM@address:	
   362                           ; 1 bytes @ 0x1
   363                           
   364                           
   365                           ; 1 bytes @ 0x1
   366     0077                     	ds	1
   367     0078                     ??_delay:
   368     0078                     ??_isr:	
   369                           ; 1 bytes @ 0x2
   370                           
   371                           
   372                           ; 1 bytes @ 0x2
   373     0078                     	ds	4
   374                           
   375                           	psect	cstackBANK0
   376     0020                     __pcstackBANK0:
   377     0020                     ??_setup:
   378     0020                     ??_setupADC:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0020                     ??_setupPWM:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0020                     ??_initUART:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0020                     ??_incModo:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0020                     ?___wmul:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0020                     ___wmul@multiplier:	
   394                           ; 2 bytes @ 0x0
   395                           
   396                           
   397                           ; 2 bytes @ 0x0
   398     0020                     	ds	2
   399     0022                     ___wmul@multiplicand:
   400                           
   401                           ; 2 bytes @ 0x2
   402     0022                     	ds	2
   403     0024                     ??___wmul:
   404     0024                     ___wmul@product:	
   405                           ; 1 bytes @ 0x4
   406                           
   407                           
   408                           ; 2 bytes @ 0x4
   409     0024                     	ds	2
   410     0026                     ?___awdiv:
   411     0026                     ___awdiv@divisor:	
   412                           ; 2 bytes @ 0x6
   413                           
   414                           
   415                           ; 2 bytes @ 0x6
   416     0026                     	ds	2
   417     0028                     ___awdiv@dividend:
   418                           
   419                           ; 2 bytes @ 0x8
   420     0028                     	ds	2
   421     002A                     ??___awdiv:
   422                           
   423                           ; 1 bytes @ 0xA
   424     002A                     	ds	1
   425     002B                     ___awdiv@counter:
   426                           
   427                           ; 1 bytes @ 0xB
   428     002B                     	ds	1
   429     002C                     ___awdiv@sign:
   430                           
   431                           ; 1 bytes @ 0xC
   432     002C                     	ds	1
   433     002D                     ___awdiv@quotient:
   434                           
   435                           ; 2 bytes @ 0xD
   436     002D                     	ds	2
   437     002F                     ?_map:
   438     002F                     map@inputmin:	
   439                           ; 2 bytes @ 0xF
   440                           
   441                           
   442                           ; 2 bytes @ 0xF
   443     002F                     	ds	2
   444     0031                     map@inputmax:
   445                           
   446                           ; 2 bytes @ 0x11
   447     0031                     	ds	2
   448     0033                     map@outmin:
   449                           
   450                           ; 2 bytes @ 0x13
   451     0033                     	ds	2
   452     0035                     map@outmax:
   453                           
   454                           ; 2 bytes @ 0x15
   455     0035                     	ds	2
   456     0037                     ??_map:
   457                           
   458                           ; 1 bytes @ 0x17
   459     0037                     	ds	3
   460     003A                     map@value:
   461                           
   462                           ; 1 bytes @ 0x1A
   463     003A                     	ds	1
   464     003B                     ??_main:
   465                           
   466                           ; 1 bytes @ 0x1B
   467     003B                     	ds	1
   468                           
   469                           	psect	maintext
   470     0022                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 131 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B00/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         0       0       0       0       0
   492 ;;      Temps:          0       1       0       0       0
   493 ;;      Totals:         0       1       0       0       0
   494 ;;Total ram usage:        1 bytes
   495 ;; Hardware stack levels required when called: 4
   496 ;; This function calls:
   497 ;;		_incModo
   498 ;;		_initUART
   499 ;;		_map
   500 ;;		_setup
   501 ;;		_setupADC
   502 ;;		_setupPWM
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     0022                     _main:	
   509                           ;psect for function _main
   510                           
   511     0022                     l1604:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;main.c: 132:     setup();
   517     0022  120A  118A  22B4  120A  118A  	fcall	_setup
   518                           
   519                           ;main.c: 133:     setupADC();
   520     0027  120A  118A  2351  120A  118A  	fcall	_setupADC
   521                           
   522                           ;main.c: 134:     setupPWM();
   523     002C  120A  118A  2312  120A  118A  	fcall	_setupPWM
   524                           
   525                           ;main.c: 135:     initUART();
   526     0031  120A  118A  2380  120A  118A  	fcall	_initUART
   527     0036                     l1606:
   528                           
   529                           ;main.c: 136:     modo = 1;
   530     0036  3001               	movlw	1
   531     0037  00F4               	movwf	_modo
   532     0038  3000               	movlw	0
   533     0039  00F5               	movwf	_modo+1
   534     003A                     l1608:
   535                           
   536                           ;main.c: 137:     address = 0;
   537     003A  01F0               	clrf	_address
   538     003B  01F1               	clrf	_address+1
   539     003C                     l1610:
   540                           
   541                           ;main.c: 143:         if (PORTEbits.RE2){
   542     003C  1283               	bcf	3,5	;RP0=0, select bank0
   543     003D  1303               	bcf	3,6	;RP1=0, select bank0
   544     003E  1D09               	btfss	9,2	;volatile
   545     003F  2841               	goto	u811
   546     0040  2842               	goto	u810
   547     0041                     u811:
   548     0041  2932               	goto	l1664
   549     0042                     u810:
   550     0042                     l150:	
   551                           ;main.c: 146:             }
   552                           
   553                           
   554                           ;main.c: 144:             while(PORTEbits.RE2){
   555     0042  1909               	btfsc	9,2	;volatile
   556     0043  2845               	goto	u821
   557     0044  2846               	goto	u820
   558     0045                     u821:
   559     0045  2842               	goto	l150
   560     0046                     u820:
   561     0046                     l1614:
   562                           
   563                           ;main.c: 147:             incModo();
   564     0046  120A  118A  2393  120A  118A  	fcall	_incModo
   565     004B  2932               	goto	l1664
   566     004C                     l154:	
   567                           ;main.c: 152:             case (1):
   568                           
   569                           
   570                           ;main.c: 155:                 PORTDbits.RD0 = 0;
   571     004C  1283               	bcf	3,5	;RP0=0, select bank0
   572     004D  1303               	bcf	3,6	;RP1=0, select bank0
   573     004E  1008               	bcf	8,0	;volatile
   574                           
   575                           ;main.c: 156:                 PORTDbits.RD1 = 0;
   576     004F  1088               	bcf	8,1	;volatile
   577                           
   578                           ;main.c: 157:                 PORTDbits.RD2 = 1;
   579     0050  1508               	bsf	8,2	;volatile
   580     0051                     l1616:
   581                           
   582                           ;main.c: 160:                 ADCON0bits.CHS = 0b0000;
   583     0051  30C3               	movlw	-61
   584     0052  059F               	andwf	31,f	;volatile
   585     0053                     l1618:
   586                           
   587                           ;main.c: 161:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   588     0053  3003               	movlw	3
   589     0054  1283               	bcf	3,5	;RP0=0, select bank0
   590     0055  1303               	bcf	3,6	;RP1=0, select bank0
   591     0056  00BB               	movwf	??_main
   592     0057                     u877:
   593     0057  0BBB               	decfsz	??_main,f
   594     0058  2857               	goto	u877
   595     0059                     l1620:
   596                           
   597                           ;main.c: 162:                 ADCON0bits.GO = 1;
   598     0059  1283               	bcf	3,5	;RP0=0, select bank0
   599     005A  1303               	bcf	3,6	;RP1=0, select bank0
   600     005B  149F               	bsf	31,1	;volatile
   601     005C                     l155:	
   602                           ;main.c: 165:                 }
   603                           
   604                           
   605                           ;main.c: 163:                 while (ADCON0bits.GO == 1){
   606     005C  189F               	btfsc	31,1	;volatile
   607     005D  285F               	goto	u831
   608     005E  2860               	goto	u830
   609     005F                     u831:
   610     005F  285C               	goto	l155
   611     0060                     u830:
   612     0060                     l1622:
   613                           
   614                           ;main.c: 166:                 ADC_Voltaje1 = map(ADRESH, 0, 255, 5, 17);
   615     0060  3000               	movlw	0
   616     0061  00AF               	movwf	map@inputmin
   617     0062  00B0               	movwf	map@inputmin+1
   618     0063  30FF               	movlw	255
   619     0064  00B1               	movwf	map@inputmax
   620     0065  3000               	movlw	0
   621     0066  00B2               	movwf	map@inputmax+1
   622     0067  3005               	movlw	5
   623     0068  00B3               	movwf	map@outmin
   624     0069  3000               	movlw	0
   625     006A  00B4               	movwf	map@outmin+1
   626     006B  3011               	movlw	17
   627     006C  00B5               	movwf	map@outmax
   628     006D  3000               	movlw	0
   629     006E  00B6               	movwf	map@outmax+1
   630     006F  081E               	movf	30,w	;volatile
   631     0070  120A  118A  2279  120A  118A  	fcall	_map
   632     0075  1283               	bcf	3,5	;RP0=0, select bank0
   633     0076  1303               	bcf	3,6	;RP1=0, select bank0
   634     0077  0830               	movf	?_map+1,w
   635     0078  00F3               	movwf	_ADC_Voltaje1+1
   636     0079  082F               	movf	?_map,w
   637     007A  00F2               	movwf	_ADC_Voltaje1
   638     007B                     l1624:
   639                           
   640                           ;main.c: 167:                 CCPR1L = ADC_Voltaje1;
   641     007B  0872               	movf	_ADC_Voltaje1,w
   642     007C  0095               	movwf	21	;volatile
   643     007D                     l1626:
   644                           
   645                           ;main.c: 168:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   646     007D  3003               	movlw	3
   647     007E  1283               	bcf	3,5	;RP0=0, select bank0
   648     007F  1303               	bcf	3,6	;RP1=0, select bank0
   649     0080  00BB               	movwf	??_main
   650     0081                     u887:
   651     0081  0BBB               	decfsz	??_main,f
   652     0082  2881               	goto	u887
   653     0083                     l1628:
   654                           
   655                           ;main.c: 171:                 ADCON0bits.CHS = 0b0001;
   656     0083  1283               	bcf	3,5	;RP0=0, select bank0
   657     0084  1303               	bcf	3,6	;RP1=0, select bank0
   658     0085  081F               	movf	31,w	;volatile
   659     0086  39C3               	andlw	-61
   660     0087  3804               	iorlw	4
   661     0088  009F               	movwf	31	;volatile
   662     0089                     l1630:
   663                           
   664                           ;main.c: 172:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   665     0089  3003               	movlw	3
   666     008A  1283               	bcf	3,5	;RP0=0, select bank0
   667     008B  1303               	bcf	3,6	;RP1=0, select bank0
   668     008C  00BB               	movwf	??_main
   669     008D                     u897:
   670     008D  0BBB               	decfsz	??_main,f
   671     008E  288D               	goto	u897
   672     008F                     l1632:
   673                           
   674                           ;main.c: 173:                 ADCON0bits.GO = 1;
   675     008F  1283               	bcf	3,5	;RP0=0, select bank0
   676     0090  1303               	bcf	3,6	;RP1=0, select bank0
   677     0091  149F               	bsf	31,1	;volatile
   678     0092                     l158:	
   679                           ;main.c: 176:                 }
   680                           
   681                           
   682                           ;main.c: 174:                 while (ADCON0bits.GO == 1){
   683     0092  189F               	btfsc	31,1	;volatile
   684     0093  2895               	goto	u841
   685     0094  2896               	goto	u840
   686     0095                     u841:
   687     0095  2892               	goto	l158
   688     0096                     u840:
   689     0096                     l1634:
   690                           
   691                           ;main.c: 177:                 ADC_Voltaje2 = map(ADRESH, 0, 255, 5, 17);
   692     0096  3000               	movlw	0
   693     0097  00AF               	movwf	map@inputmin
   694     0098  00B0               	movwf	map@inputmin+1
   695     0099  30FF               	movlw	255
   696     009A  00B1               	movwf	map@inputmax
   697     009B  3000               	movlw	0
   698     009C  00B2               	movwf	map@inputmax+1
   699     009D  3005               	movlw	5
   700     009E  00B3               	movwf	map@outmin
   701     009F  3000               	movlw	0
   702     00A0  00B4               	movwf	map@outmin+1
   703     00A1  3011               	movlw	17
   704     00A2  00B5               	movwf	map@outmax
   705     00A3  3000               	movlw	0
   706     00A4  00B6               	movwf	map@outmax+1
   707     00A5  081E               	movf	30,w	;volatile
   708     00A6  120A  118A  2279  120A  118A  	fcall	_map
   709     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   710     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   711     00AD  0830               	movf	?_map+1,w
   712     00AE  00C1               	movwf	_ADC_Voltaje2+1
   713     00AF  082F               	movf	?_map,w
   714     00B0  00C0               	movwf	_ADC_Voltaje2
   715     00B1                     l1636:
   716                           
   717                           ;main.c: 178:                 CCPR2L = ADC_Voltaje2;
   718     00B1  0840               	movf	_ADC_Voltaje2,w
   719     00B2  009B               	movwf	27	;volatile
   720     00B3                     l1638:
   721                           
   722                           ;main.c: 179:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   723     00B3  3003               	movlw	3
   724     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   725     00B5  1303               	bcf	3,6	;RP1=0, select bank0
   726     00B6  00BB               	movwf	??_main
   727     00B7                     u907:
   728     00B7  0BBB               	decfsz	??_main,f
   729     00B8  28B7               	goto	u907
   730     00B9                     l1640:
   731                           
   732                           ;main.c: 182:                 ADCON0bits.CHS = 0b0010;
   733     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   734     00BA  1303               	bcf	3,6	;RP1=0, select bank0
   735     00BB  081F               	movf	31,w	;volatile
   736     00BC  39C3               	andlw	-61
   737     00BD  3808               	iorlw	8
   738     00BE  009F               	movwf	31	;volatile
   739     00BF                     l1642:
   740                           
   741                           ;main.c: 183:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   742     00BF  3003               	movlw	3
   743     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   744     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   745     00C2  00BB               	movwf	??_main
   746     00C3                     u917:
   747     00C3  0BBB               	decfsz	??_main,f
   748     00C4  28C3               	goto	u917
   749     00C5                     l1644:
   750                           
   751                           ;main.c: 184:                 ADCON0bits.GO = 1;
   752     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   753     00C6  1303               	bcf	3,6	;RP1=0, select bank0
   754     00C7  149F               	bsf	31,1	;volatile
   755     00C8                     l161:	
   756                           ;main.c: 187:                 }
   757                           
   758                           
   759                           ;main.c: 185:                 while (ADCON0bits.GO == 1){
   760     00C8  189F               	btfsc	31,1	;volatile
   761     00C9  28CB               	goto	u851
   762     00CA  28CC               	goto	u850
   763     00CB                     u851:
   764     00CB  28C8               	goto	l161
   765     00CC                     u850:
   766     00CC                     l1646:
   767                           
   768                           ;main.c: 188:                 ADC_Voltaje3 = map(ADRESH, 0, 255, 5, 17);
   769     00CC  3000               	movlw	0
   770     00CD  00AF               	movwf	map@inputmin
   771     00CE  00B0               	movwf	map@inputmin+1
   772     00CF  30FF               	movlw	255
   773     00D0  00B1               	movwf	map@inputmax
   774     00D1  3000               	movlw	0
   775     00D2  00B2               	movwf	map@inputmax+1
   776     00D3  3005               	movlw	5
   777     00D4  00B3               	movwf	map@outmin
   778     00D5  3000               	movlw	0
   779     00D6  00B4               	movwf	map@outmin+1
   780     00D7  3011               	movlw	17
   781     00D8  00B5               	movwf	map@outmax
   782     00D9  3000               	movlw	0
   783     00DA  00B6               	movwf	map@outmax+1
   784     00DB  081E               	movf	30,w	;volatile
   785     00DC  120A  118A  2279  120A  118A  	fcall	_map
   786     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   787     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   788     00E3  0830               	movf	?_map+1,w
   789     00E4  00BF               	movwf	_ADC_Voltaje3+1
   790     00E5  082F               	movf	?_map,w
   791     00E6  00BE               	movwf	_ADC_Voltaje3
   792     00E7                     l1648:
   793                           
   794                           ;main.c: 189:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   795     00E7  3003               	movlw	3
   796     00E8  1283               	bcf	3,5	;RP0=0, select bank0
   797     00E9  1303               	bcf	3,6	;RP1=0, select bank0
   798     00EA  00BB               	movwf	??_main
   799     00EB                     u927:
   800     00EB  0BBB               	decfsz	??_main,f
   801     00EC  28EB               	goto	u927
   802     00ED                     l1650:
   803                           
   804                           ;main.c: 192:                 ADCON0bits.CHS = 0b0011;
   805     00ED  1283               	bcf	3,5	;RP0=0, select bank0
   806     00EE  1303               	bcf	3,6	;RP1=0, select bank0
   807     00EF  081F               	movf	31,w	;volatile
   808     00F0  39C3               	andlw	-61
   809     00F1  380C               	iorlw	12
   810     00F2  009F               	movwf	31	;volatile
   811     00F3                     l1652:
   812                           
   813                           ;main.c: 193:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   814     00F3  3003               	movlw	3
   815     00F4  1283               	bcf	3,5	;RP0=0, select bank0
   816     00F5  1303               	bcf	3,6	;RP1=0, select bank0
   817     00F6  00BB               	movwf	??_main
   818     00F7                     u937:
   819     00F7  0BBB               	decfsz	??_main,f
   820     00F8  28F7               	goto	u937
   821     00F9                     l1654:
   822                           
   823                           ;main.c: 194:                 ADCON0bits.GO = 1;
   824     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   825     00FA  1303               	bcf	3,6	;RP1=0, select bank0
   826     00FB  149F               	bsf	31,1	;volatile
   827     00FC                     l164:	
   828                           ;main.c: 197:                 }
   829                           
   830                           
   831                           ;main.c: 195:                 while (ADCON0bits.GO == 1){
   832     00FC  189F               	btfsc	31,1	;volatile
   833     00FD  28FF               	goto	u861
   834     00FE  2900               	goto	u860
   835     00FF                     u861:
   836     00FF  28FC               	goto	l164
   837     0100                     u860:
   838     0100                     l1656:
   839                           
   840                           ;main.c: 198:                 ADC_Voltaje4 = map(ADRESH, 0, 255, 5, 17);
   841     0100  3000               	movlw	0
   842     0101  00AF               	movwf	map@inputmin
   843     0102  00B0               	movwf	map@inputmin+1
   844     0103  30FF               	movlw	255
   845     0104  00B1               	movwf	map@inputmax
   846     0105  3000               	movlw	0
   847     0106  00B2               	movwf	map@inputmax+1
   848     0107  3005               	movlw	5
   849     0108  00B3               	movwf	map@outmin
   850     0109  3000               	movlw	0
   851     010A  00B4               	movwf	map@outmin+1
   852     010B  3011               	movlw	17
   853     010C  00B5               	movwf	map@outmax
   854     010D  3000               	movlw	0
   855     010E  00B6               	movwf	map@outmax+1
   856     010F  081E               	movf	30,w	;volatile
   857     0110  120A  118A  2279  120A  118A  	fcall	_map
   858     0115  1283               	bcf	3,5	;RP0=0, select bank0
   859     0116  1303               	bcf	3,6	;RP1=0, select bank0
   860     0117  0830               	movf	?_map+1,w
   861     0118  00BD               	movwf	_ADC_Voltaje4+1
   862     0119  082F               	movf	?_map,w
   863     011A  00BC               	movwf	_ADC_Voltaje4
   864     011B                     l1658:
   865                           
   866                           ;main.c: 199:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   867     011B  3003               	movlw	3
   868     011C  1283               	bcf	3,5	;RP0=0, select bank0
   869     011D  1303               	bcf	3,6	;RP1=0, select bank0
   870     011E  00BB               	movwf	??_main
   871     011F                     u947:
   872     011F  0BBB               	decfsz	??_main,f
   873     0120  291F               	goto	u947
   874                           
   875                           ;main.c: 201:                 break;
   876     0121  283C               	goto	l1610
   877     0122                     l168:	
   878                           ;main.c: 203:             case (2):
   879                           
   880                           
   881                           ;main.c: 206:                 PORTDbits.RD0 = 1;
   882     0122  1283               	bcf	3,5	;RP0=0, select bank0
   883     0123  1303               	bcf	3,6	;RP1=0, select bank0
   884     0124  1408               	bsf	8,0	;volatile
   885                           
   886                           ;main.c: 207:                 PORTDbits.RD1 = 0;
   887     0125  1088               	bcf	8,1	;volatile
   888                           
   889                           ;main.c: 208:                 PORTDbits.RD2 = 0;
   890     0126  1108               	bcf	8,2	;volatile
   891     0127                     l1660:
   892                           
   893                           ;main.c: 210:                 CCPR1L = ADC_Voltaje1;
   894     0127  0872               	movf	_ADC_Voltaje1,w
   895     0128  0095               	movwf	21	;volatile
   896                           
   897                           ;main.c: 211:                 CCPR2L = ADC_Voltaje2;
   898     0129  0840               	movf	_ADC_Voltaje2,w
   899     012A  009B               	movwf	27	;volatile
   900                           
   901                           ;main.c: 213:                 break;
   902     012B  283C               	goto	l1610
   903     012C                     l169:	
   904                           ;main.c: 214:             case(3):
   905                           
   906                           
   907                           ;main.c: 217:                 PORTDbits.RD0 = 0;
   908     012C  1283               	bcf	3,5	;RP0=0, select bank0
   909     012D  1303               	bcf	3,6	;RP1=0, select bank0
   910     012E  1008               	bcf	8,0	;volatile
   911                           
   912                           ;main.c: 218:                 PORTDbits.RD1 = 1;
   913     012F  1488               	bsf	8,1	;volatile
   914                           
   915                           ;main.c: 219:                 PORTDbits.RD2 = 0;
   916     0130  1108               	bcf	8,2	;volatile
   917                           
   918                           ;main.c: 261:                 break;
   919     0131  283C               	goto	l1610
   920     0132                     l1664:
   921                           
   922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 1, Range of values is 0 to 0
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte            4     3 (average)
   928                           ; direct_byte           11     8 (fixed)
   929                           ; jumptable            260     6 (fixed)
   930                           ;	Chosen strategy is simple_byte
   931     0132  0875               	movf	_modo+1,w
   932     0133  3A00               	xorlw	0	; case 0
   933     0134  1903               	skipnz
   934     0135  2937               	goto	l1690
   935     0136  283C               	goto	l1610
   936     0137                     l1690:
   937                           
   938                           ; Switch size 1, requested type "simple"
   939                           ; Number of cases is 3, Range of values is 1 to 3
   940                           ; switch strategies available:
   941                           ; Name         Instructions Cycles
   942                           ; simple_byte           10     6 (average)
   943                           ; direct_byte           20    11 (fixed)
   944                           ; jumptable            263     9 (fixed)
   945                           ;	Chosen strategy is simple_byte
   946     0137  0874               	movf	_modo,w
   947     0138  3A01               	xorlw	1	; case 1
   948     0139  1903               	skipnz
   949     013A  284C               	goto	l154
   950     013B  3A03               	xorlw	3	; case 2
   951     013C  1903               	skipnz
   952     013D  2922               	goto	l168
   953     013E  3A01               	xorlw	1	; case 3
   954     013F  1903               	skipnz
   955     0140  292C               	goto	l169
   956     0141  283C               	goto	l1610
   957     0142  120A  118A  280C   	ljmp	start
   958     0145                     __end_of_main:
   959                           
   960                           	psect	text1
   961     0312                     __ptext1:	
   962 ;; *************** function _setupPWM *****************
   963 ;; Defined at:
   964 ;;		line 356 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 2
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992     0312                     _setupPWM:	
   993                           ;psect for function _setupPWM
   994                           
   995     0312                     l1558:	
   996                           ;incstack = 0
   997                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
   998                           
   999                           
  1000                           ;main.c: 357:     TRISCbits.TRISC2 = 1;
  1001     0312  1683               	bsf	3,5	;RP0=1, select bank1
  1002     0313  1303               	bcf	3,6	;RP1=0, select bank1
  1003     0314  1507               	bsf	7,2	;volatile
  1004                           
  1005                           ;main.c: 358:     TRISCbits.TRISC1 = 1;
  1006     0315  1487               	bsf	7,1	;volatile
  1007     0316                     l1560:
  1008                           
  1009                           ;main.c: 360:     PR2 = 255;
  1010     0316  30FF               	movlw	255
  1011     0317  0092               	movwf	18	;volatile
  1012     0318                     l1562:
  1013                           
  1014                           ;main.c: 362:     CCP1CONbits.P1M = 0b00;
  1015     0318  303F               	movlw	-193
  1016     0319  1283               	bcf	3,5	;RP0=0, select bank0
  1017     031A  1303               	bcf	3,6	;RP1=0, select bank0
  1018     031B  0597               	andwf	23,f	;volatile
  1019     031C                     l1564:
  1020                           
  1021                           ;main.c: 365:     CCP1CONbits.CCP1M = 0b1100;
  1022     031C  0817               	movf	23,w	;volatile
  1023     031D  39F0               	andlw	-16
  1024     031E  380C               	iorlw	12
  1025     031F  0097               	movwf	23	;volatile
  1026     0320                     l1566:
  1027                           
  1028                           ;main.c: 369:     CCP2CONbits.CCP2M = 0b1111;
  1029     0320  300F               	movlw	15
  1030     0321  049D               	iorwf	29,f	;volatile
  1031     0322                     l1568:
  1032                           
  1033                           ;main.c: 372:     CCP1CONbits.DC1B = 0b11;
  1034     0322  3030               	movlw	48
  1035     0323  0497               	iorwf	23,f	;volatile
  1036                           
  1037                           ;main.c: 373:     CCPR1L = 11;
  1038     0324  300B               	movlw	11
  1039     0325  0095               	movwf	21	;volatile
  1040     0326                     l1570:
  1041                           
  1042                           ;main.c: 376:     CCP2CONbits.DC2B1 = 0b1;
  1043     0326  169D               	bsf	29,5	;volatile
  1044     0327                     l1572:
  1045                           
  1046                           ;main.c: 377:     CCP2CONbits.DC2B0 = 0b1;
  1047     0327  161D               	bsf	29,4	;volatile
  1048                           
  1049                           ;main.c: 378:     CCPR2L = 11;
  1050     0328  300B               	movlw	11
  1051     0329  009B               	movwf	27	;volatile
  1052     032A                     l1574:
  1053                           
  1054                           ;main.c: 381:     PIR1bits.TMR2IF = 0;
  1055     032A  108C               	bcf	12,1	;volatile
  1056     032B                     l1576:
  1057                           
  1058                           ;main.c: 382:     T2CONbits.T2CKPS = 0b11;
  1059     032B  3003               	movlw	3
  1060     032C  0492               	iorwf	18,f	;volatile
  1061     032D                     l1578:
  1062                           
  1063                           ;main.c: 383:     T2CONbits.TMR2ON = 1;
  1064     032D  1512               	bsf	18,2	;volatile
  1065     032E                     l190:	
  1066                           ;main.c: 387:     }
  1067                           
  1068                           
  1069                           ;main.c: 385:     while(!PIR1bits.TMR2IF){
  1070     032E  1C8C               	btfss	12,1	;volatile
  1071     032F  2B31               	goto	u791
  1072     0330  2B32               	goto	u790
  1073     0331                     u791:
  1074     0331  2B2E               	goto	l190
  1075     0332                     u790:
  1076     0332                     l192:
  1077                           
  1078                           ;main.c: 389:     TRISCbits.TRISC2=0;
  1079     0332  1683               	bsf	3,5	;RP0=1, select bank1
  1080     0333  1303               	bcf	3,6	;RP1=0, select bank1
  1081     0334  1107               	bcf	7,2	;volatile
  1082                           
  1083                           ;main.c: 390:     TRISCbits.TRISC1=0;
  1084     0335  1087               	bcf	7,1	;volatile
  1085     0336                     l193:
  1086     0336  0008               	return
  1087     0337                     __end_of_setupPWM:
  1088                           
  1089                           	psect	text2
  1090     0351                     __ptext2:	
  1091 ;; *************** function _setupADC *****************
  1092 ;; Defined at:
  1093 ;;		line 393 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       1       0       0       0
  1110 ;;      Totals:         0       1       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 2
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121     0351                     _setupADC:	
  1122                           ;psect for function _setupADC
  1123                           
  1124     0351                     l1544:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1127                           
  1128                           
  1129                           ;main.c: 395:     ADCON0bits.ADCS = 0b01;
  1130     0351  1283               	bcf	3,5	;RP0=0, select bank0
  1131     0352  1303               	bcf	3,6	;RP1=0, select bank0
  1132     0353  081F               	movf	31,w	;volatile
  1133     0354  393F               	andlw	-193
  1134     0355  3840               	iorlw	64
  1135     0356  009F               	movwf	31	;volatile
  1136     0357                     l1546:
  1137                           
  1138                           ;main.c: 397:     ADCON1bits.VCFG1 = 0;
  1139     0357  1683               	bsf	3,5	;RP0=1, select bank1
  1140     0358  1303               	bcf	3,6	;RP1=0, select bank1
  1141     0359  129F               	bcf	31,5	;volatile
  1142     035A                     l1548:
  1143                           
  1144                           ;main.c: 398:     ADCON1bits.VCFG0 = 0;
  1145     035A  121F               	bcf	31,4	;volatile
  1146     035B                     l1550:
  1147                           
  1148                           ;main.c: 401:     ADCON1bits.ADFM = 0;
  1149     035B  139F               	bcf	31,7	;volatile
  1150                           
  1151                           ;main.c: 404:     ADCON0bits.CHS = 0b0000;
  1152     035C  30C3               	movlw	-61
  1153     035D  1283               	bcf	3,5	;RP0=0, select bank0
  1154     035E  1303               	bcf	3,6	;RP1=0, select bank0
  1155     035F  059F               	andwf	31,f	;volatile
  1156     0360                     l1552:
  1157                           
  1158                           ;main.c: 406:     ADCON0bits.ADON = 1;
  1159     0360  141F               	bsf	31,0	;volatile
  1160     0361                     l1554:
  1161                           
  1162                           ;main.c: 408:     PIR1bits.ADIF = 0;
  1163     0361  130C               	bcf	12,6	;volatile
  1164     0362                     l1556:
  1165                           
  1166                           ;main.c: 411:     _delay((unsigned long)((100)*(500000/4000000.0)));
  1167     0362  3003               	movlw	3
  1168     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0365  00A0               	movwf	??_setupADC
  1171     0366                     u957:
  1172     0366  0BA0               	decfsz	??_setupADC,f
  1173     0367  2B66               	goto	u957
  1174     0368                     l196:
  1175     0368  0008               	return
  1176     0369                     __end_of_setupADC:
  1177                           
  1178                           	psect	text3
  1179     02B4                     __ptext3:	
  1180 ;; *************** function _setup *****************
  1181 ;; Defined at:
  1182 ;;		line 301 in file "main.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 2
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210     02B4                     _setup:	
  1211                           ;psect for function _setup
  1212                           
  1213     02B4                     l1496:	
  1214                           ;incstack = 0
  1215                           ; Regs used in _setup: [wreg+status,2+status,0]
  1216                           
  1217                           
  1218                           ;main.c: 304:     ANSEL = 0b00001111;
  1219     02B4  300F               	movlw	15
  1220     02B5  1683               	bsf	3,5	;RP0=1, select bank3
  1221     02B6  1703               	bsf	3,6	;RP1=1, select bank3
  1222     02B7  0088               	movwf	8	;volatile
  1223     02B8                     l1498:
  1224                           
  1225                           ;main.c: 305:     ANSELH = 0;
  1226     02B8  0189               	clrf	9	;volatile
  1227     02B9                     l1500:
  1228                           
  1229                           ;main.c: 308:     TRISA = 0b00001111;
  1230     02B9  300F               	movlw	15
  1231     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1232     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1233     02BC  0085               	movwf	5	;volatile
  1234     02BD                     l1502:
  1235                           
  1236                           ;main.c: 309:     TRISB = 0b00001111;
  1237     02BD  300F               	movlw	15
  1238     02BE  0086               	movwf	6	;volatile
  1239     02BF                     l1504:
  1240                           
  1241                           ;main.c: 310:     TRISC = 0b00000110;
  1242     02BF  3006               	movlw	6
  1243     02C0  0087               	movwf	7	;volatile
  1244                           
  1245                           ;main.c: 311:     TRISD = 0b00000000;
  1246     02C1  0188               	clrf	8	;volatile
  1247     02C2                     l1506:
  1248                           
  1249                           ;main.c: 312:     TRISE = 0b00000100;
  1250     02C2  3004               	movlw	4
  1251     02C3  0089               	movwf	9	;volatile
  1252     02C4                     l1508:
  1253                           
  1254                           ;main.c: 314:     PORTA = 0b00000000;
  1255     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1256     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1257     02C6  0185               	clrf	5	;volatile
  1258     02C7                     l1510:
  1259                           
  1260                           ;main.c: 315:     PORTB = 0b00000000;
  1261     02C7  0186               	clrf	6	;volatile
  1262     02C8                     l1512:
  1263                           
  1264                           ;main.c: 316:     PORTC = 0b00000000;
  1265     02C8  0187               	clrf	7	;volatile
  1266     02C9                     l1514:
  1267                           
  1268                           ;main.c: 317:     PORTD = 0b00000000;
  1269     02C9  0188               	clrf	8	;volatile
  1270     02CA                     l1516:
  1271                           
  1272                           ;main.c: 318:     PORTE = 0b00000000;
  1273     02CA  0189               	clrf	9	;volatile
  1274                           
  1275                           ;main.c: 328:     IOCB = 0b00111111;
  1276     02CB  303F               	movlw	63
  1277     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  1278     02CD  1303               	bcf	3,6	;RP1=0, select bank1
  1279     02CE  0096               	movwf	22	;volatile
  1280     02CF                     l1518:
  1281                           
  1282                           ;main.c: 329:     OPTION_REGbits.nRBPU = 0;
  1283     02CF  1381               	bcf	1,7	;volatile
  1284     02D0                     l1520:
  1285                           
  1286                           ;main.c: 330:     INTCONbits.RBIE = 1;
  1287     02D0  158B               	bsf	11,3	;volatile
  1288     02D1                     l1522:
  1289                           
  1290                           ;main.c: 334:     OSCCONbits.IRCF = 0b011;
  1291     02D1  080F               	movf	15,w	;volatile
  1292     02D2  398F               	andlw	-113
  1293     02D3  3830               	iorlw	48
  1294     02D4  008F               	movwf	15	;volatile
  1295     02D5                     l1524:
  1296                           
  1297                           ;main.c: 335:     OSCCONbits.SCS = 1;
  1298     02D5  140F               	bsf	15,0	;volatile
  1299     02D6                     l1526:
  1300                           
  1301                           ;main.c: 338:     INTCONbits.GIE = 1;
  1302     02D6  178B               	bsf	11,7	;volatile
  1303     02D7                     l1528:
  1304                           
  1305                           ;main.c: 341:     PIE1bits.ADIE = 1;
  1306     02D7  170C               	bsf	12,6	;volatile
  1307     02D8                     l1530:
  1308                           
  1309                           ;main.c: 342:     INTCONbits.TMR0IE = 1;
  1310     02D8  168B               	bsf	11,5	;volatile
  1311     02D9                     l1532:
  1312                           
  1313                           ;main.c: 344:     PIR1bits.ADIF = 0;
  1314     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1315     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1316     02DB  130C               	bcf	12,6	;volatile
  1317     02DC                     l1534:
  1318                           
  1319                           ;main.c: 345:     INTCONbits.RBIF = 0;
  1320     02DC  100B               	bcf	11,0	;volatile
  1321     02DD                     l1536:
  1322                           
  1323                           ;main.c: 349:     OPTION_REGbits.T0CS = 0;
  1324     02DD  1683               	bsf	3,5	;RP0=1, select bank1
  1325     02DE  1303               	bcf	3,6	;RP1=0, select bank1
  1326     02DF  1281               	bcf	1,5	;volatile
  1327     02E0                     l1538:
  1328                           
  1329                           ;main.c: 350:     OPTION_REGbits.PSA = 0;
  1330     02E0  1181               	bcf	1,3	;volatile
  1331     02E1                     l1540:
  1332                           
  1333                           ;main.c: 351:     OPTION_REGbits.PS = 0b011;
  1334     02E1  0801               	movf	1,w	;volatile
  1335     02E2  39F8               	andlw	-8
  1336     02E3  3803               	iorlw	3
  1337     02E4  0081               	movwf	1	;volatile
  1338                           
  1339                           ;main.c: 352:     TMR0 = 100;
  1340     02E5  3064               	movlw	100
  1341     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1342     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1343     02E8  0081               	movwf	1	;volatile
  1344     02E9                     l1542:
  1345                           
  1346                           ;main.c: 353:     INTCONbits.T0IF = 0;
  1347     02E9  110B               	bcf	11,2	;volatile
  1348     02EA                     l187:
  1349     02EA  0008               	return
  1350     02EB                     __end_of_setup:
  1351                           
  1352                           	psect	text4
  1353     0279                     __ptext4:	
  1354 ;; *************** function _map *****************
  1355 ;; Defined at:
  1356 ;;		line 444 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  value           1    wreg     unsigned char 
  1359 ;;  inputmin        2   15[BANK0 ] int 
  1360 ;;  inputmax        2   17[BANK0 ] int 
  1361 ;;  outmin          2   19[BANK0 ] int 
  1362 ;;  outmax          2   21[BANK0 ] int 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  value           1   26[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2   15[BANK0 ] unsigned int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       8       0       0       0
  1375 ;;      Locals:         0       1       0       0       0
  1376 ;;      Temps:          0       3       0       0       0
  1377 ;;      Totals:         0      12       0       0       0
  1378 ;;Total ram usage:       12 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 3
  1381 ;; This function calls:
  1382 ;;		___awdiv
  1383 ;;		___wmul
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389     0279                     _map:	
  1390                           ;psect for function _map
  1391                           
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1395                           ;map@value stored from wreg
  1396     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1397     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1398     027B  00BA               	movwf	map@value
  1399     027C                     l1600:
  1400                           
  1401                           ;main.c: 444: unsigned int map(uint8_t value, int inputmin,;main.c: 445:                
      +                             int inputmax, int outmin, int outmax){;main.c: 446:     return ((value - inputmin)*(o
      +                          utmax-outmin)) / ((inputmax-inputmin)+outmin);
  1402     027C  082F               	movf	map@inputmin,w
  1403     027D  0231               	subwf	map@inputmax,w
  1404     027E  00B7               	movwf	??_map
  1405     027F  0830               	movf	map@inputmin+1,w
  1406     0280  1C03               	skipc
  1407     0281  0A30               	incf	map@inputmin+1,w
  1408     0282  0232               	subwf	map@inputmax+1,w
  1409     0283  00B8               	movwf	??_map+1
  1410     0284  0833               	movf	map@outmin,w
  1411     0285  0737               	addwf	??_map,w
  1412     0286  00A6               	movwf	___awdiv@divisor
  1413     0287  0834               	movf	map@outmin+1,w
  1414     0288  1803               	skipnc
  1415     0289  0A34               	incf	map@outmin+1,w
  1416     028A  0738               	addwf	??_map+1,w
  1417     028B  00A7               	movwf	___awdiv@divisor+1
  1418     028C  083A               	movf	map@value,w
  1419     028D  00B9               	movwf	??_map+2
  1420     028E  082F               	movf	map@inputmin,w
  1421     028F  0239               	subwf	??_map+2,w
  1422     0290  00A0               	movwf	___wmul@multiplier
  1423     0291  0930               	comf	map@inputmin+1,w
  1424     0292  1803               	skipnc
  1425     0293  3E01               	addlw	1
  1426     0294  00A1               	movwf	___wmul@multiplier+1
  1427     0295  0833               	movf	map@outmin,w
  1428     0296  0235               	subwf	map@outmax,w
  1429     0297  00A2               	movwf	___wmul@multiplicand
  1430     0298  0834               	movf	map@outmin+1,w
  1431     0299  1C03               	skipc
  1432     029A  0A34               	incf	map@outmin+1,w
  1433     029B  0236               	subwf	map@outmax+1,w
  1434     029C  00A3               	movwf	___wmul@multiplicand+1
  1435     029D  120A  118A  22EB  120A  118A  	fcall	___wmul
  1436     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1437     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1438     02A4  0821               	movf	?___wmul+1,w
  1439     02A5  00A9               	movwf	___awdiv@dividend+1
  1440     02A6  0820               	movf	?___wmul,w
  1441     02A7  00A8               	movwf	___awdiv@dividend
  1442     02A8  120A  118A  2210  120A  118A  	fcall	___awdiv
  1443     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1444     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1445     02AF  0827               	movf	?___awdiv+1,w
  1446     02B0  00B0               	movwf	?_map+1
  1447     02B1  0826               	movf	?___awdiv,w
  1448     02B2  00AF               	movwf	?_map
  1449     02B3                     l213:
  1450     02B3  0008               	return
  1451     02B4                     __end_of_map:
  1452                           
  1453                           	psect	text5
  1454     02EB                     __ptext5:	
  1455 ;; *************** function ___wmul *****************
  1456 ;; Defined at:
  1457 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1460 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  product         2    4[BANK0 ] unsigned int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2    0[BANK0 ] unsigned int 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       4       0       0       0
  1473 ;;      Locals:         0       2       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         0       6       0       0       0
  1476 ;;Total ram usage:        6 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 2
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_map
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     02EB                     ___wmul:	
  1487                           ;psect for function ___wmul
  1488                           
  1489     02EB                     l1482:	
  1490                           ;incstack = 0
  1491                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1492                           
  1493     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1494     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1495     02ED  01A4               	clrf	___wmul@product
  1496     02EE  01A5               	clrf	___wmul@product+1
  1497     02EF                     l1484:
  1498     02EF  1C20               	btfss	___wmul@multiplier,0
  1499     02F0  2AF2               	goto	u751
  1500     02F1  2AF3               	goto	u750
  1501     02F2                     u751:
  1502     02F2  2AF9               	goto	l308
  1503     02F3                     u750:
  1504     02F3                     l1486:
  1505     02F3  0822               	movf	___wmul@multiplicand,w
  1506     02F4  07A4               	addwf	___wmul@product,f
  1507     02F5  1803               	skipnc
  1508     02F6  0AA5               	incf	___wmul@product+1,f
  1509     02F7  0823               	movf	___wmul@multiplicand+1,w
  1510     02F8  07A5               	addwf	___wmul@product+1,f
  1511     02F9                     l308:
  1512     02F9  3001               	movlw	1
  1513     02FA                     u765:
  1514     02FA  1003               	clrc
  1515     02FB  0DA2               	rlf	___wmul@multiplicand,f
  1516     02FC  0DA3               	rlf	___wmul@multiplicand+1,f
  1517     02FD  3EFF               	addlw	-1
  1518     02FE  1D03               	skipz
  1519     02FF  2AFA               	goto	u765
  1520     0300                     l1488:
  1521     0300  3001               	movlw	1
  1522     0301                     u775:
  1523     0301  1003               	clrc
  1524     0302  0CA1               	rrf	___wmul@multiplier+1,f
  1525     0303  0CA0               	rrf	___wmul@multiplier,f
  1526     0304  3EFF               	addlw	-1
  1527     0305  1D03               	skipz
  1528     0306  2B01               	goto	u775
  1529     0307                     l1490:
  1530     0307  0820               	movf	___wmul@multiplier,w
  1531     0308  0421               	iorwf	___wmul@multiplier+1,w
  1532     0309  1D03               	btfss	3,2
  1533     030A  2B0C               	goto	u781
  1534     030B  2B0D               	goto	u780
  1535     030C                     u781:
  1536     030C  2AEF               	goto	l1484
  1537     030D                     u780:
  1538     030D                     l1492:
  1539     030D  0825               	movf	___wmul@product+1,w
  1540     030E  00A1               	movwf	?___wmul+1
  1541     030F  0824               	movf	___wmul@product,w
  1542     0310  00A0               	movwf	?___wmul
  1543     0311                     l310:
  1544     0311  0008               	return
  1545     0312                     __end_of___wmul:
  1546                           
  1547                           	psect	text6
  1548     0210                     __ptext6:	
  1549 ;; *************** function ___awdiv *****************
  1550 ;; Defined at:
  1551 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  divisor         2    6[BANK0 ] int 
  1554 ;;  dividend        2    8[BANK0 ] int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  quotient        2   13[BANK0 ] int 
  1557 ;;  sign            1   12[BANK0 ] unsigned char 
  1558 ;;  counter         1   11[BANK0 ] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    6[BANK0 ] int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       4       0       0       0
  1569 ;;      Locals:         0       4       0       0       0
  1570 ;;      Temps:          0       1       0       0       0
  1571 ;;      Totals:         0       9       0       0       0
  1572 ;;Total ram usage:        9 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 2
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_map
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582     0210                     ___awdiv:	
  1583                           ;psect for function ___awdiv
  1584                           
  1585     0210                     l1166:	
  1586                           ;incstack = 0
  1587                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1588                           
  1589     0210  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0211  1303               	bcf	3,6	;RP1=0, select bank0
  1591     0212  01AC               	clrf	___awdiv@sign
  1592     0213                     l1168:
  1593     0213  1FA7               	btfss	___awdiv@divisor+1,7
  1594     0214  2A16               	goto	u431
  1595     0215  2A17               	goto	u430
  1596     0216                     u431:
  1597     0216  2A1E               	goto	l1174
  1598     0217                     u430:
  1599     0217                     l1170:
  1600     0217  09A6               	comf	___awdiv@divisor,f
  1601     0218  09A7               	comf	___awdiv@divisor+1,f
  1602     0219  0AA6               	incf	___awdiv@divisor,f
  1603     021A  1903               	skipnz
  1604     021B  0AA7               	incf	___awdiv@divisor+1,f
  1605     021C                     l1172:
  1606     021C  01AC               	clrf	___awdiv@sign
  1607     021D  0AAC               	incf	___awdiv@sign,f
  1608     021E                     l1174:
  1609     021E  1FA9               	btfss	___awdiv@dividend+1,7
  1610     021F  2A21               	goto	u441
  1611     0220  2A22               	goto	u440
  1612     0221                     u441:
  1613     0221  2A2B               	goto	l1180
  1614     0222                     u440:
  1615     0222                     l1176:
  1616     0222  09A8               	comf	___awdiv@dividend,f
  1617     0223  09A9               	comf	___awdiv@dividend+1,f
  1618     0224  0AA8               	incf	___awdiv@dividend,f
  1619     0225  1903               	skipnz
  1620     0226  0AA9               	incf	___awdiv@dividend+1,f
  1621     0227                     l1178:
  1622     0227  3001               	movlw	1
  1623     0228  00AA               	movwf	??___awdiv
  1624     0229  082A               	movf	??___awdiv,w
  1625     022A  06AC               	xorwf	___awdiv@sign,f
  1626     022B                     l1180:
  1627     022B  01AD               	clrf	___awdiv@quotient
  1628     022C  01AE               	clrf	___awdiv@quotient+1
  1629     022D                     l1182:
  1630     022D  0826               	movf	___awdiv@divisor,w
  1631     022E  0427               	iorwf	___awdiv@divisor+1,w
  1632     022F  1903               	btfsc	3,2
  1633     0230  2A32               	goto	u451
  1634     0231  2A33               	goto	u450
  1635     0232                     u451:
  1636     0232  2A6A               	goto	l1202
  1637     0233                     u450:
  1638     0233                     l1184:
  1639     0233  01AB               	clrf	___awdiv@counter
  1640     0234  0AAB               	incf	___awdiv@counter,f
  1641     0235  2A41               	goto	l1190
  1642     0236                     l1186:
  1643     0236  3001               	movlw	1
  1644     0237                     u465:
  1645     0237  1003               	clrc
  1646     0238  0DA6               	rlf	___awdiv@divisor,f
  1647     0239  0DA7               	rlf	___awdiv@divisor+1,f
  1648     023A  3EFF               	addlw	-1
  1649     023B  1D03               	skipz
  1650     023C  2A37               	goto	u465
  1651     023D                     l1188:
  1652     023D  3001               	movlw	1
  1653     023E  00AA               	movwf	??___awdiv
  1654     023F  082A               	movf	??___awdiv,w
  1655     0240  07AB               	addwf	___awdiv@counter,f
  1656     0241                     l1190:
  1657     0241  1FA7               	btfss	___awdiv@divisor+1,7
  1658     0242  2A44               	goto	u471
  1659     0243  2A45               	goto	u470
  1660     0244                     u471:
  1661     0244  2A36               	goto	l1186
  1662     0245                     u470:
  1663     0245                     l1192:
  1664     0245  3001               	movlw	1
  1665     0246                     u485:
  1666     0246  1003               	clrc
  1667     0247  0DAD               	rlf	___awdiv@quotient,f
  1668     0248  0DAE               	rlf	___awdiv@quotient+1,f
  1669     0249  3EFF               	addlw	-1
  1670     024A  1D03               	skipz
  1671     024B  2A46               	goto	u485
  1672     024C  0827               	movf	___awdiv@divisor+1,w
  1673     024D  0229               	subwf	___awdiv@dividend+1,w
  1674     024E  1D03               	skipz
  1675     024F  2A52               	goto	u495
  1676     0250  0826               	movf	___awdiv@divisor,w
  1677     0251  0228               	subwf	___awdiv@dividend,w
  1678     0252                     u495:
  1679     0252  1C03               	skipc
  1680     0253  2A55               	goto	u491
  1681     0254  2A56               	goto	u490
  1682     0255                     u491:
  1683     0255  2A5D               	goto	l1198
  1684     0256                     u490:
  1685     0256                     l1194:
  1686     0256  0826               	movf	___awdiv@divisor,w
  1687     0257  02A8               	subwf	___awdiv@dividend,f
  1688     0258  0827               	movf	___awdiv@divisor+1,w
  1689     0259  1C03               	skipc
  1690     025A  03A9               	decf	___awdiv@dividend+1,f
  1691     025B  02A9               	subwf	___awdiv@dividend+1,f
  1692     025C                     l1196:
  1693     025C  142D               	bsf	___awdiv@quotient,0
  1694     025D                     l1198:
  1695     025D  3001               	movlw	1
  1696     025E                     u505:
  1697     025E  1003               	clrc
  1698     025F  0CA7               	rrf	___awdiv@divisor+1,f
  1699     0260  0CA6               	rrf	___awdiv@divisor,f
  1700     0261  3EFF               	addlw	-1
  1701     0262  1D03               	skipz
  1702     0263  2A5E               	goto	u505
  1703     0264                     l1200:
  1704     0264  3001               	movlw	1
  1705     0265  02AB               	subwf	___awdiv@counter,f
  1706     0266  1D03               	btfss	3,2
  1707     0267  2A69               	goto	u511
  1708     0268  2A6A               	goto	u510
  1709     0269                     u511:
  1710     0269  2A45               	goto	l1192
  1711     026A                     u510:
  1712     026A                     l1202:
  1713     026A  082C               	movf	___awdiv@sign,w
  1714     026B  1903               	btfsc	3,2
  1715     026C  2A6E               	goto	u521
  1716     026D  2A6F               	goto	u520
  1717     026E                     u521:
  1718     026E  2A74               	goto	l1206
  1719     026F                     u520:
  1720     026F                     l1204:
  1721     026F  09AD               	comf	___awdiv@quotient,f
  1722     0270  09AE               	comf	___awdiv@quotient+1,f
  1723     0271  0AAD               	incf	___awdiv@quotient,f
  1724     0272  1903               	skipnz
  1725     0273  0AAE               	incf	___awdiv@quotient+1,f
  1726     0274                     l1206:
  1727     0274  082E               	movf	___awdiv@quotient+1,w
  1728     0275  00A7               	movwf	?___awdiv+1
  1729     0276  082D               	movf	___awdiv@quotient,w
  1730     0277  00A6               	movwf	?___awdiv
  1731     0278                     l461:
  1732     0278  0008               	return
  1733     0279                     __end_of___awdiv:
  1734                           
  1735                           	psect	text7
  1736     0380                     __ptext7:	
  1737 ;; *************** function _initUART *****************
  1738 ;; Defined at:
  1739 ;;		line 414 in file "main.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 2
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767     0380                     _initUART:	
  1768                           ;psect for function _initUART
  1769                           
  1770     0380                     l1580:	
  1771                           ;incstack = 0
  1772                           ; Regs used in _initUART: [wreg]
  1773                           
  1774                           
  1775                           ;main.c: 415:     SPBRG = 14;
  1776     0380  300E               	movlw	14
  1777     0381  1683               	bsf	3,5	;RP0=1, select bank1
  1778     0382  1303               	bcf	3,6	;RP1=0, select bank1
  1779     0383  0099               	movwf	25	;volatile
  1780     0384                     l1582:
  1781                           
  1782                           ;main.c: 416:     TXSTAbits.SYNC = 0;
  1783     0384  1218               	bcf	24,4	;volatile
  1784     0385                     l1584:
  1785                           
  1786                           ;main.c: 417:     RCSTAbits.SPEN = 1;
  1787     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1788     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1789     0387  1798               	bsf	24,7	;volatile
  1790     0388                     l1586:
  1791                           
  1792                           ;main.c: 418:     TXSTAbits.TXEN = 1;
  1793     0388  1683               	bsf	3,5	;RP0=1, select bank1
  1794     0389  1303               	bcf	3,6	;RP1=0, select bank1
  1795     038A  1698               	bsf	24,5	;volatile
  1796     038B                     l1588:
  1797                           
  1798                           ;main.c: 421:     PIR1bits.TXIF = 0;
  1799     038B  1283               	bcf	3,5	;RP0=0, select bank0
  1800     038C  1303               	bcf	3,6	;RP1=0, select bank0
  1801     038D  120C               	bcf	12,4	;volatile
  1802     038E                     l1590:
  1803                           
  1804                           ;main.c: 423:     RCSTAbits.CREN = 1;
  1805     038E  1618               	bsf	24,4	;volatile
  1806     038F                     l1592:
  1807                           
  1808                           ;main.c: 425:     BAUDCTLbits.BRG16 = 1;
  1809     038F  1683               	bsf	3,5	;RP0=1, select bank3
  1810     0390  1703               	bsf	3,6	;RP1=1, select bank3
  1811     0391  1587               	bsf	7,3	;volatile
  1812     0392                     l199:
  1813     0392  0008               	return
  1814     0393                     __end_of_initUART:
  1815                           
  1816                           	psect	text8
  1817     0393                     __ptext8:	
  1818 ;; *************** function _incModo *****************
  1819 ;; Defined at:
  1820 ;;		line 428 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 2
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     0393                     _incModo:	
  1849                           ;psect for function _incModo
  1850                           
  1851     0393                     l1594:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _incModo: [wreg+status,2+status,0]
  1854                           
  1855                           
  1856                           ;main.c: 429:     if (modo != 3){
  1857     0393  3003               	movlw	3
  1858     0394  0674               	xorwf	_modo,w
  1859     0395  0475               	iorwf	_modo+1,w
  1860     0396  1903               	btfsc	3,2
  1861     0397  2B99               	goto	u801
  1862     0398  2B9A               	goto	u800
  1863     0399                     u801:
  1864     0399  2BA1               	goto	l1598
  1865     039A                     u800:
  1866     039A                     l1596:
  1867                           
  1868                           ;main.c: 430:         modo ++;
  1869     039A  3001               	movlw	1
  1870     039B  07F4               	addwf	_modo,f
  1871     039C  1803               	skipnc
  1872     039D  0AF5               	incf	_modo+1,f
  1873     039E  3000               	movlw	0
  1874     039F  07F5               	addwf	_modo+1,f
  1875                           
  1876                           ;main.c: 431:     }
  1877     03A0  2BA5               	goto	l204
  1878     03A1                     l1598:
  1879                           
  1880                           ;main.c: 433:         modo = 1;
  1881     03A1  3001               	movlw	1
  1882     03A2  00F4               	movwf	_modo
  1883     03A3  3000               	movlw	0
  1884     03A4  00F5               	movwf	_modo+1
  1885     03A5                     l204:
  1886     03A5  0008               	return
  1887     03A6                     __end_of_incModo:
  1888                           
  1889                           	psect	text9
  1890     0145                     __ptext9:	
  1891 ;; *************** function _isr *****************
  1892 ;; Defined at:
  1893 ;;		line 63 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          4       0       0       0       0
  1910 ;;      Totals:         4       0       0       0       0
  1911 ;;Total ram usage:        4 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 1
  1914 ;; This function calls:
  1915 ;;		_delay
  1916 ;;		_read_EEPROM
  1917 ;;		_write_EEPROM
  1918 ;; This function is called by:
  1919 ;;		Interrupt level 1
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     0145                     _isr:	
  1924                           ;psect for function _isr
  1925                           
  1926     0145                     i1l1352:
  1927                           
  1928                           ;main.c: 65:     if (PIR1bits.TXIF){
  1929     0145  1283               	bcf	3,5	;RP0=0, select bank0
  1930     0146  1303               	bcf	3,6	;RP1=0, select bank0
  1931     0147  1E0C               	btfss	12,4	;volatile
  1932     0148  294A               	goto	u59_21
  1933     0149  294B               	goto	u59_20
  1934     014A                     u59_21:
  1935     014A  294C               	goto	i1l129
  1936     014B                     u59_20:
  1937     014B                     i1l1354:
  1938                           
  1939                           ;main.c: 66:         PIR1bits.TXIF = 0;
  1940     014B  120C               	bcf	12,4	;volatile
  1941     014C                     i1l129:	
  1942                           ;main.c: 67:     }
  1943                           
  1944                           
  1945                           ;main.c: 69:     if (PIR1bits.RCIF){
  1946     014C  1E8C               	btfss	12,5	;volatile
  1947     014D  294F               	goto	u60_21
  1948     014E  2950               	goto	u60_20
  1949     014F                     u60_21:
  1950     014F  2951               	goto	i1l130
  1951     0150                     u60_20:
  1952     0150                     i1l1356:
  1953                           
  1954                           ;main.c: 70:         PIR1bits.RCIF = 0;
  1955     0150  128C               	bcf	12,5	;volatile
  1956     0151                     i1l130:	
  1957                           ;main.c: 71:     }
  1958                           
  1959                           
  1960                           ;main.c: 74:     if (PIR1bits.ADIF){
  1961     0151  1F0C               	btfss	12,6	;volatile
  1962     0152  2954               	goto	u61_21
  1963     0153  2955               	goto	u61_20
  1964     0154                     u61_21:
  1965     0154  2956               	goto	i1l131
  1966     0155                     u61_20:
  1967     0155                     i1l1358:
  1968                           
  1969                           ;main.c: 75:         PIR1bits.ADIF=0;
  1970     0155  130C               	bcf	12,6	;volatile
  1971     0156                     i1l131:	
  1972                           ;main.c: 76:     }
  1973                           
  1974                           
  1975                           ;main.c: 79:     if (INTCONbits.T0IF){
  1976     0156  1D0B               	btfss	11,2	;volatile
  1977     0157  2959               	goto	u62_21
  1978     0158  295A               	goto	u62_20
  1979     0159                     u62_21:
  1980     0159  2977               	goto	i1l1376
  1981     015A                     u62_20:
  1982     015A                     i1l1360:
  1983                           
  1984                           ;main.c: 81:         TMR0 = 100;
  1985     015A  3064               	movlw	100
  1986     015B  0081               	movwf	1	;volatile
  1987     015C                     i1l1362:
  1988                           
  1989                           ;main.c: 83:         PORTAbits.RA7 = 1;
  1990     015C  1785               	bsf	5,7	;volatile
  1991     015D                     i1l1364:
  1992                           
  1993                           ;main.c: 84:         delay(ADC_Voltaje3);
  1994     015D  083F               	movf	_ADC_Voltaje3+1,w
  1995     015E  00F7               	movwf	delay@sec+1
  1996     015F  083E               	movf	_ADC_Voltaje3,w
  1997     0160  00F6               	movwf	delay@sec
  1998     0161  120A  118A  23A6  120A  118A  	fcall	_delay
  1999     0166                     i1l1366:
  2000                           
  2001                           ;main.c: 85:         PORTAbits.RA7 = 0;
  2002     0166  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0167  1303               	bcf	3,6	;RP1=0, select bank0
  2004     0168  1385               	bcf	5,7	;volatile
  2005     0169                     i1l1368:
  2006                           
  2007                           ;main.c: 86:         PORTAbits.RA6 = 1;
  2008     0169  1705               	bsf	5,6	;volatile
  2009     016A                     i1l1370:
  2010                           
  2011                           ;main.c: 87:         delay(ADC_Voltaje4);
  2012     016A  083D               	movf	_ADC_Voltaje4+1,w
  2013     016B  00F7               	movwf	delay@sec+1
  2014     016C  083C               	movf	_ADC_Voltaje4,w
  2015     016D  00F6               	movwf	delay@sec
  2016     016E  120A  118A  23A6  120A  118A  	fcall	_delay
  2017     0173                     i1l1372:
  2018                           
  2019                           ;main.c: 88:         PORTAbits.RA6 = 0;
  2020     0173  1283               	bcf	3,5	;RP0=0, select bank0
  2021     0174  1303               	bcf	3,6	;RP1=0, select bank0
  2022     0175  1305               	bcf	5,6	;volatile
  2023     0176                     i1l1374:
  2024                           
  2025                           ;main.c: 90:         INTCONbits.T0IF = 0;
  2026     0176  110B               	bcf	11,2	;volatile
  2027     0177                     i1l1376:
  2028                           
  2029                           ;main.c: 94:     if (INTCONbits.RBIF){
  2030     0177  1C0B               	btfss	11,0	;volatile
  2031     0178  297A               	goto	u63_21
  2032     0179  297B               	goto	u63_20
  2033     017A                     u63_21:
  2034     017A  2A09               	goto	i1l143
  2035     017B                     u63_20:
  2036     017B                     i1l1378:
  2037                           
  2038                           ;main.c: 95:         if (PORTBbits.RB0 == 0){
  2039     017B  1806               	btfsc	6,0	;volatile
  2040     017C  297E               	goto	u64_21
  2041     017D  297F               	goto	u64_20
  2042     017E                     u64_21:
  2043     017E  2988               	goto	i1l134
  2044     017F                     u64_20:
  2045     017F                     i1l1380:
  2046                           
  2047                           ;main.c: 96:             address = address + 4;
  2048     017F  0870               	movf	_address,w
  2049     0180  3E04               	addlw	4
  2050     0181  00F0               	movwf	_address
  2051     0182  0871               	movf	_address+1,w
  2052     0183  1803               	skipnc
  2053     0184  3E01               	addlw	1
  2054     0185  3E00               	addlw	0
  2055     0186  00F1               	movwf	_address+1
  2056                           
  2057                           ;main.c: 97:         }
  2058     0187  2A08               	goto	i1l135
  2059     0188                     i1l134:	
  2060                           ;main.c: 99:         else if (PORTBbits.RB1 == 0)
  2061                           
  2062     0188  1886               	btfsc	6,1	;volatile
  2063     0189  298B               	goto	u65_21
  2064     018A  298C               	goto	u65_20
  2065     018B                     u65_21:
  2066     018B  2995               	goto	i1l136
  2067     018C                     u65_20:
  2068     018C                     i1l1382:
  2069                           
  2070                           ;main.c: 100:             address = address - 4;
  2071     018C  0870               	movf	_address,w
  2072     018D  3EFC               	addlw	252
  2073     018E  00F0               	movwf	_address
  2074     018F  0871               	movf	_address+1,w
  2075     0190  1803               	skipnc
  2076     0191  3E01               	addlw	1
  2077     0192  3EFF               	addlw	255
  2078     0193  00F1               	movwf	_address+1
  2079     0194  2A08               	goto	i1l135
  2080     0195                     i1l136:	
  2081                           ;main.c: 102:         else if (PORTBbits.RB2 == 0){
  2082                           
  2083     0195  1906               	btfsc	6,2	;volatile
  2084     0196  2998               	goto	u66_21
  2085     0197  2999               	goto	u66_20
  2086     0198                     u66_21:
  2087     0198  29C3               	goto	i1l138
  2088     0199                     u66_20:
  2089     0199                     i1l1384:
  2090                           
  2091                           ;main.c: 105:             write_EEPROM(address, ADC_Voltaje1);
  2092     0199  0872               	movf	_ADC_Voltaje1,w
  2093     019A  00F6               	movwf	write_EEPROM@data
  2094     019B  0870               	movf	_address,w
  2095     019C  120A  118A  2337  120A  118A  	fcall	_write_EEPROM
  2096                           
  2097                           ;main.c: 106:             write_EEPROM(address + 1, ADC_Voltaje2);
  2098     01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2099     01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2100     01A3  0840               	movf	_ADC_Voltaje2,w
  2101     01A4  00F6               	movwf	write_EEPROM@data
  2102     01A5  0870               	movf	_address,w
  2103     01A6  3E01               	addlw	1
  2104     01A7  120A  118A  2337  120A  118A  	fcall	_write_EEPROM
  2105                           
  2106                           ;main.c: 107:             write_EEPROM(address + 2, ADC_Voltaje3);
  2107     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2108     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2109     01AE  083E               	movf	_ADC_Voltaje3,w
  2110     01AF  00F6               	movwf	write_EEPROM@data
  2111     01B0  0870               	movf	_address,w
  2112     01B1  3E02               	addlw	2
  2113     01B2  120A  118A  2337  120A  118A  	fcall	_write_EEPROM
  2114                           
  2115                           ;main.c: 108:             write_EEPROM(address + 3, ADC_Voltaje4);
  2116     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2117     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2118     01B9  083C               	movf	_ADC_Voltaje4,w
  2119     01BA  00F6               	movwf	write_EEPROM@data
  2120     01BB  0870               	movf	_address,w
  2121     01BC  3E03               	addlw	3
  2122     01BD  120A  118A  2337  120A  118A  	fcall	_write_EEPROM
  2123                           
  2124                           ;main.c: 109:         }
  2125     01C2  2A08               	goto	i1l135
  2126     01C3                     i1l138:	
  2127                           ;main.c: 111:         else if (PORTBbits.RB3 == 0){
  2128                           
  2129     01C3  1986               	btfsc	6,3	;volatile
  2130     01C4  29C6               	goto	u67_21
  2131     01C5  29C7               	goto	u67_20
  2132     01C6                     u67_21:
  2133     01C6  2A08               	goto	i1l135
  2134     01C7                     u67_20:
  2135     01C7                     i1l1386:
  2136                           
  2137                           ;main.c: 112:             if (modo == 2){
  2138     01C7  3002               	movlw	2
  2139     01C8  0674               	xorwf	_modo,w
  2140     01C9  0475               	iorwf	_modo+1,w
  2141     01CA  1D03               	btfss	3,2
  2142     01CB  29CD               	goto	u68_21
  2143     01CC  29CE               	goto	u68_20
  2144     01CD                     u68_21:
  2145     01CD  2A08               	goto	i1l139
  2146     01CE                     u68_20:
  2147     01CE                     i1l1388:
  2148                           
  2149                           ;main.c: 114:                 ADC_Voltaje1 = read_EEPROM(address);
  2150     01CE  0870               	movf	_address,w
  2151     01CF  120A  118A  2369  120A  118A  	fcall	_read_EEPROM
  2152     01D4  00F8               	movwf	??_isr
  2153     01D5  01F9               	clrf	??_isr+1
  2154     01D6  0878               	movf	??_isr,w
  2155     01D7  00F2               	movwf	_ADC_Voltaje1
  2156     01D8  0879               	movf	??_isr+1,w
  2157     01D9  00F3               	movwf	_ADC_Voltaje1+1
  2158     01DA                     i1l1390:
  2159                           
  2160                           ;main.c: 115:                 ADC_Voltaje2 = read_EEPROM(address+1);
  2161     01DA  0870               	movf	_address,w
  2162     01DB  3E01               	addlw	1
  2163     01DC  120A  118A  2369  120A  118A  	fcall	_read_EEPROM
  2164     01E1  00F8               	movwf	??_isr
  2165     01E2  01F9               	clrf	??_isr+1
  2166     01E3  0878               	movf	??_isr,w
  2167     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2168     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2169     01E6  00C0               	movwf	_ADC_Voltaje2
  2170     01E7  0879               	movf	??_isr+1,w
  2171     01E8  00C1               	movwf	_ADC_Voltaje2+1
  2172     01E9                     i1l1392:
  2173                           
  2174                           ;main.c: 116:                 ADC_Voltaje3 = read_EEPROM(address+2);
  2175     01E9  0870               	movf	_address,w
  2176     01EA  3E02               	addlw	2
  2177     01EB  120A  118A  2369  120A  118A  	fcall	_read_EEPROM
  2178     01F0  00F8               	movwf	??_isr
  2179     01F1  01F9               	clrf	??_isr+1
  2180     01F2  0878               	movf	??_isr,w
  2181     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2182     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2183     01F5  00BE               	movwf	_ADC_Voltaje3
  2184     01F6  0879               	movf	??_isr+1,w
  2185     01F7  00BF               	movwf	_ADC_Voltaje3+1
  2186     01F8                     i1l1394:
  2187                           
  2188                           ;main.c: 117:                 ADC_Voltaje4 = read_EEPROM(address+3);
  2189     01F8  0870               	movf	_address,w
  2190     01F9  3E03               	addlw	3
  2191     01FA  120A  118A  2369  120A  118A  	fcall	_read_EEPROM
  2192     01FF  00F8               	movwf	??_isr
  2193     0200  01F9               	clrf	??_isr+1
  2194     0201  0878               	movf	??_isr,w
  2195     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2196     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2197     0204  00BC               	movwf	_ADC_Voltaje4
  2198     0205  0879               	movf	??_isr+1,w
  2199     0206  00BD               	movwf	_ADC_Voltaje4+1
  2200                           
  2201                           ;main.c: 118:             }
  2202     0207  2A08               	goto	i1l135
  2203     0208                     i1l139:
  2204     0208                     i1l135:
  2205                           
  2206                           ;main.c: 124:         INTCONbits.RBIF = 0;
  2207     0208  100B               	bcf	11,0	;volatile
  2208     0209                     i1l143:
  2209     0209  087B               	movf	??_isr+3,w
  2210     020A  008A               	movwf	10
  2211     020B  0E7A               	swapf	??_isr+2,w
  2212     020C  0083               	movwf	3
  2213     020D  0EFE               	swapf	btemp,f
  2214     020E  0E7E               	swapf	btemp,w
  2215     020F  0009               	retfie
  2216     0210                     __end_of_isr:
  2217                           
  2218                           	psect	intentry
  2219     0004                     __pintentry:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2222                           
  2223     0004                     interrupt_function:
  2224     007E                     saved_w	set	btemp
  2225     0004  00FE               	movwf	btemp
  2226     0005  0E03               	swapf	3,w
  2227     0006  00FA               	movwf	??_isr+2
  2228     0007  080A               	movf	10,w
  2229     0008  00FB               	movwf	??_isr+3
  2230     0009  120A  118A  2945   	ljmp	_isr
  2231                           
  2232                           	psect	text10
  2233     0337                     __ptext10:	
  2234 ;; *************** function _write_EEPROM *****************
  2235 ;; Defined at:
  2236 ;;		line 271 in file "main.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  address         1    wreg     unsigned char 
  2239 ;;  data            1    0[COMMON] unsigned char 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  address         1    1[COMMON] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         1       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         2       0       0       0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_isr
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264     0337                     _write_EEPROM:	
  2265                           ;psect for function _write_EEPROM
  2266                           
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in _write_EEPROM: [wreg]
  2270                           ;write_EEPROM@address stored from wreg
  2271     0337  00F7               	movwf	write_EEPROM@address
  2272     0338                     i1l1216:
  2273     0338                     i1l175:	
  2274                           ;main.c: 272:     while (WR);
  2275                           
  2276     0338  1683               	bsf	3,5	;RP0=1, select bank3
  2277     0339  1703               	bsf	3,6	;RP1=1, select bank3
  2278     033A  188C               	btfsc	12,1	;volsfr
  2279     033B  2B3D               	goto	u54_21
  2280     033C  2B3E               	goto	u54_20
  2281     033D                     u54_21:
  2282     033D  2B38               	goto	i1l175
  2283     033E                     u54_20:
  2284     033E                     i1l1218:
  2285                           
  2286                           ;main.c: 274:     EEADR = address;
  2287     033E  0877               	movf	write_EEPROM@address,w
  2288     033F  1283               	bcf	3,5	;RP0=0, select bank2
  2289     0340  1703               	bsf	3,6	;RP1=1, select bank2
  2290     0341  008D               	movwf	13	;volatile
  2291                           
  2292                           ;main.c: 275:     EEDAT = data;
  2293     0342  0876               	movf	write_EEPROM@data,w
  2294     0343  008C               	movwf	12	;volatile
  2295     0344                     i1l1220:
  2296                           
  2297                           ;main.c: 277:     EECON1bits.EEPGD = 0;
  2298     0344  1683               	bsf	3,5	;RP0=1, select bank3
  2299     0345  1703               	bsf	3,6	;RP1=1, select bank3
  2300     0346  138C               	bcf	12,7	;volsfr
  2301     0347                     i1l1222:
  2302                           
  2303                           ;main.c: 278:     EECON1bits.WREN = 1;
  2304     0347  150C               	bsf	12,2	;volsfr
  2305     0348                     i1l1224:
  2306                           
  2307                           ;main.c: 280:     INTCONbits.GIE = 0;
  2308     0348  138B               	bcf	11,7	;volatile
  2309                           
  2310                           ;main.c: 282:     EECON2 = 0x55;
  2311     0349  3055               	movlw	85
  2312     034A  008D               	movwf	13	;volsfr
  2313                           
  2314                           ;main.c: 283:     EECON2 = 0xAA;
  2315     034B  30AA               	movlw	170
  2316     034C  008D               	movwf	13	;volsfr
  2317     034D                     i1l1226:
  2318                           
  2319                           ;main.c: 285:     EECON1bits.WR = 1;
  2320     034D  148C               	bsf	12,1	;volsfr
  2321     034E                     i1l1228:
  2322                           
  2323                           ;main.c: 286:     EECON1bits. WREN = 0;
  2324     034E  110C               	bcf	12,2	;volsfr
  2325     034F                     i1l1230:
  2326                           
  2327                           ;main.c: 288:     INTCONbits.GIE = 1;
  2328     034F  178B               	bsf	11,7	;volatile
  2329     0350                     i1l178:
  2330     0350  0008               	return
  2331     0351                     __end_of_write_EEPROM:
  2332                           
  2333                           	psect	text11
  2334     0369                     __ptext11:	
  2335 ;; *************** function _read_EEPROM *****************
  2336 ;; Defined at:
  2337 ;;		line 291 in file "main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  address         1    wreg     unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  address         1    0[COMMON] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         1       0       0       0       0
  2355 ;;Total ram usage:        1 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_isr
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364     0369                     _read_EEPROM:	
  2365                           ;psect for function _read_EEPROM
  2366                           
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _read_EEPROM: [wreg]
  2370                           ;read_EEPROM@address stored from wreg
  2371     0369  00F6               	movwf	read_EEPROM@address
  2372     036A                     i1l1232:
  2373     036A                     i1l181:	
  2374                           ;main.c: 292:     while (WR||RD);
  2375                           
  2376     036A  1683               	bsf	3,5	;RP0=1, select bank3
  2377     036B  1703               	bsf	3,6	;RP1=1, select bank3
  2378     036C  188C               	btfsc	12,1	;volsfr
  2379     036D  2B6F               	goto	u55_21
  2380     036E  2B70               	goto	u55_20
  2381     036F                     u55_21:
  2382     036F  2B6A               	goto	i1l181
  2383     0370                     u55_20:
  2384     0370                     i1l1234:
  2385     0370  180C               	btfsc	12,0	;volsfr
  2386     0371  2B73               	goto	u56_21
  2387     0372  2B74               	goto	u56_20
  2388     0373                     u56_21:
  2389     0373  2B6A               	goto	i1l181
  2390     0374                     u56_20:
  2391     0374                     i1l1236:
  2392                           
  2393                           ;main.c: 294:     EEADR = address;
  2394     0374  0876               	movf	read_EEPROM@address,w
  2395     0375  1283               	bcf	3,5	;RP0=0, select bank2
  2396     0376  1703               	bsf	3,6	;RP1=1, select bank2
  2397     0377  008D               	movwf	13	;volatile
  2398     0378                     i1l1238:
  2399                           
  2400                           ;main.c: 295:     EECON1bits.EEPGD = 0;
  2401     0378  1683               	bsf	3,5	;RP0=1, select bank3
  2402     0379  1703               	bsf	3,6	;RP1=1, select bank3
  2403     037A  138C               	bcf	12,7	;volsfr
  2404     037B                     i1l1240:
  2405                           
  2406                           ;main.c: 296:     EECON1bits.RD = 1;
  2407     037B  140C               	bsf	12,0	;volsfr
  2408                           
  2409                           ;main.c: 297:     return EEDAT;
  2410     037C  1283               	bcf	3,5	;RP0=0, select bank2
  2411     037D  1703               	bsf	3,6	;RP1=1, select bank2
  2412     037E  080C               	movf	12,w	;volatile
  2413     037F                     i1l184:
  2414     037F  0008               	return
  2415     0380                     __end_of_read_EEPROM:
  2416                           
  2417                           	psect	text12
  2418     03A6                     __ptext12:	
  2419 ;; *************** function _delay *****************
  2420 ;; Defined at:
  2421 ;;		line 437 in file "main.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  sec             2    0[COMMON] unsigned int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         2       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         2       0       0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_isr
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     03A6                     _delay:	
  2449                           ;psect for function _delay
  2450                           
  2451     03A6                     i1l1210:	
  2452                           ;incstack = 0
  2453                           ; Regs used in _delay: [wreg+status,2+status,0]
  2454                           
  2455                           
  2456                           ;main.c: 438:     while (sec > 0){
  2457     03A6  2BB0               	goto	i1l1214
  2458     03A7                     i1l208:
  2459                           
  2460                           ;main.c: 439:         _delay((unsigned long)((50)*(500000/4000000.0)));
  2461     03A7  2BA8               	nop2	;2 cycle nop
  2462     03A8  2BA9               	nop2	;2 cycle nop
  2463     03A9  2BAA               	nop2	;2 cycle nop
  2464     03AA                     i1l1212:
  2465                           
  2466                           ;main.c: 440:         sec--;
  2467     03AA  3001               	movlw	1
  2468     03AB  02F6               	subwf	delay@sec,f
  2469     03AC  3000               	movlw	0
  2470     03AD  1C03               	skipc
  2471     03AE  03F7               	decf	delay@sec+1,f
  2472     03AF  02F7               	subwf	delay@sec+1,f
  2473     03B0                     i1l1214:
  2474                           
  2475                           ;main.c: 438:     while (sec > 0){
  2476     03B0  0876               	movf	delay@sec,w
  2477     03B1  0477               	iorwf	delay@sec+1,w
  2478     03B2  1D03               	btfss	3,2
  2479     03B3  2BB5               	goto	u53_21
  2480     03B4  2BB6               	goto	u53_20
  2481     03B5                     u53_21:
  2482     03B5  2BA7               	goto	i1l208
  2483     03B6                     u53_20:
  2484     03B6                     i1l210:
  2485     03B6  0008               	return
  2486     03B7                     __end_of_delay:
  2487     007E                     btemp	set	126	;btemp
  2488     007E                     wtemp0	set	126
  2489                           
  2490                           	psect	idloc
  2491                           
  2492                           ;Config register IDLOC0 @ 0x2000
  2493                           ;	unspecified, using default values
  2494     2000                     	org	8192
  2495     2000  3FFF               	dw	16383
  2496                           
  2497                           ;Config register IDLOC1 @ 0x2001
  2498                           ;	unspecified, using default values
  2499     2001                     	org	8193
  2500     2001  3FFF               	dw	16383
  2501                           
  2502                           ;Config register IDLOC2 @ 0x2002
  2503                           ;	unspecified, using default values
  2504     2002                     	org	8194
  2505     2002  3FFF               	dw	16383
  2506                           
  2507                           ;Config register IDLOC3 @ 0x2003
  2508                           ;	unspecified, using default values
  2509     2003                     	org	8195
  2510     2003  3FFF               	dw	16383
  2511                           
  2512                           	psect	config
  2513                           
  2514                           ;Config register CONFIG1 @ 0x2007
  2515                           ;	Oscillator Selection bits
  2516                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2517                           ;	Watchdog Timer Enable bit
  2518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2519                           ;	Power-up Timer Enable bit
  2520                           ;	PWRTE = OFF, PWRT disabled
  2521                           ;	RE3/MCLR pin function select bit
  2522                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2523                           ;	Code Protection bit
  2524                           ;	CP = OFF, Program memory code protection is disabled
  2525                           ;	Data Code Protection bit
  2526                           ;	CPD = OFF, Data memory code protection is disabled
  2527                           ;	Brown Out Reset Selection bits
  2528                           ;	BOREN = OFF, BOR disabled
  2529                           ;	Internal External Switchover bit
  2530                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2531                           ;	Fail-Safe Clock Monitor Enabled bit
  2532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2533                           ;	Low Voltage Programming Enable bit
  2534                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2535                           ;	In-Circuit Debugger Mode bit
  2536                           ;	DEBUG = 0x1, unprogramme  2537     2007                     	org	8199
  2538     2007  20D4               	dw	8404
  2539                           
  2540                           ;Config register CONFIG2 @ 0x2008
  2541                           ;	Brown-out Reset Selection bit
  2542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2543                           ;	Flash Program Memory Self Write Enable bits
  2544                           ;	WRT = OFF, Write protection off
  2545     2008                     	org	8200
  2546     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     28      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_delay
    _isr->_write_EEPROM

Critical Paths under _main in BANK0

    _main->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2425
                                             27 BANK0      1     1      0
                            _incModo
                           _initUART
                                _map
                              _setup
                           _setupADC
                           _setupPWM
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map                                                 12     4      8    2425
                                             15 BANK0     12     4      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _incModo                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     545
                                              2 COMMON     4     4      0
                              _delay
                        _read_EEPROM
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (4) _write_EEPROM                                         2     1      1     348
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (4) _read_EEPROM                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _incModo
   _initUART
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup
   _setupADC
   _setupPWM

 _isr (ROOT)
   _delay
   _read_EEPROM
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 19 03:52:34 2022

            map@inputmax 0031              map@inputmin 002F                       _RD 0C60  
                     _WR 0C61             ___awdiv@sign 002C      ___wmul@multiplicand 0022  
                    l204 03A5                      l213 02B3                      l310 0311  
                    l150 0042                      l161 00C8                      l154 004C  
                    l155 005C                      l308 02F9                      l164 00FC  
                    l190 032E                      l158 0092                      l192 0332  
                    l168 0122                      l193 0336                      l169 012C  
                    l187 02EA                      l196 0368                      l461 0278  
                    l199 0392                      u510 026A                      u430 0217  
                    _PR2 0092                      u511 0269                      u431 0216  
                    u520 026F                      u440 0222                      u521 026E  
                    u505 025E                      u441 0221                      u450 0233  
                    u451 0232                      u470 0245                      u471 0244  
                    u800 039A                      u801 0399                      u465 0237  
                    u490 0256                      u810 0042                      u491 0255  
                    u811 0041                      u820 0046                      u485 0246  
                    u821 0045                      u750 02F3                      u830 0060  
                    u495 0252                      u751 02F2                      u831 005F  
                    u840 0096                      u841 0095                      u850 00CC  
                    u851 00CB                      u907 00B7                      u780 030D  
                    u860 0100                      u781 030C                      u765 02FA  
                    u861 00FF                      u917 00C3                      u790 0332  
                    u775 0301                      u791 0331                      u927 00EB  
                    u937 00F7                      u947 011F                      u957 0366  
                    u877 0057                      u887 0081                      u897 008D  
                    _map 0279                      _isr 0145                     l1200 0264  
                   l1202 026A                     l1204 026F                     l1206 0274  
                   l1170 0217                     l1180 022B                     l1172 021C  
                   l1500 02B9                     l1190 0241                     l1182 022D  
                   l1174 021E                     l1166 0210                     l1510 02C7  
                   l1502 02BD                     l1192 0245                     l1184 0233  
                   l1176 0222                     l1168 0213                     l1600 027C  
                   l1520 02D0                     l1512 02C8                     l1504 02BF  
                   l1194 0256                     l1186 0236                     l1178 0227  
                   l1530 02D8                     l1522 02D1                     l1514 02C9  
                   l1506 02C2                     l1610 003C                     l1196 025C  
                   l1188 023D                     l1540 02E1                     l1532 02D9  
                   l1524 02D5                     l1516 02CA                     l1508 02C4  
                   l1620 0059                     l1604 0022                     l1198 025D  
                   l1542 02E9                     l1534 02DC                     l1526 02D6  
                   l1518 02CF                     l1550 035B                     l1630 0089  
                   l1622 0060                     l1614 0046                     l1606 0036  
                   l1536 02DD                     l1528 02D7                     l1552 0360  
                   l1544 0351                     l1560 0316                     l1640 00B9  
                   l1632 008F                     l1624 007B                     l1616 0051  
                   l1608 003A                     l1490 0307                     l1482 02EB  
                   l1538 02E0                     l1554 0361                     l1546 0357  
                   l1570 0326                     l1562 0318                     l1650 00ED  
                   l1642 00BF                     l1634 0096                     l1626 007D  
                   l1618 0053                     l1580 0380                     l1492 030D  
                   l1484 02EF                     l1556 0362                     l1548 035A  
                   l1572 0327                     l1564 031C                     l1660 0127  
                   l1652 00F3                     l1644 00C5                     l1636 00B1  
                   l1628 0083                     l1590 038E                     l1582 0384  
                   l1486 02F3                     l1574 032A                     l1566 0320  
                   l1558 0312                     l1654 00F9                     l1646 00CC  
                   l1638 00B3                     l1592 038F                     l1584 0385  
                   l1488 0300                     l1496 02B4                     l1576 032B  
                   l1568 0322                     l1656 0100                     l1648 00E7  
                   l1664 0132                     l1594 0393                     l1586 0388  
                   l1498 02B8                     l1578 032D                     l1690 0137  
                   l1658 011B                     l1596 039A                     l1588 038B  
                   l1598 03A1                     ?_map 002F                     ?_isr 0076  
                   _IOCB 0096                     _TMR0 0001                     _TXIF 0064  
                   _main 0022                     _modo 0074                     btemp 007E  
                   start 000C             ?_read_EEPROM 0076                    ??_map 0037  
                  ??_isr 0078                    ?_main 0076          __end_of___awdiv 0279  
                  _EEADR 010D                    _EEDAT 010C                    _ANSEL 0188  
        ___awdiv@divisor 0026                    i1l210 03B6                    i1l130 0151  
                  i1l131 0156                    i1l134 0188                    i1l135 0208  
                  i1l143 0209                    i1l208 03A7                    i1l136 0195  
                  i1l129 014C                    i1l138 01C3                    i1l139 0208  
                  i1l181 036A                    i1l175 0338                    i1l184 037F  
                  i1l178 0350          ___awdiv@counter 002B                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u60_20 0150  
                  u60_21 014F                    u53_20 03B6                    u61_20 0155  
                  u53_21 03B5                    u61_21 0154                    u54_20 033E  
                  u62_20 015A                    u54_21 033D                    u62_21 0159  
                  u55_20 0370                    u63_20 017B                    u55_21 036F  
                  u63_21 017A                    u56_20 0374                    u64_20 017F  
                  u56_21 0373                    u64_21 017E                    u65_20 018C  
                  u65_21 018B                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u66_20 0199                    u66_21 0198                    u67_20 01C7  
                  u59_20 014B                    u67_21 01C6                    u59_21 014A  
                  u68_20 01CE                    u68_21 01CD                    _TXREG 0019  
        __end_of_incModo 03A6                    _delay 03A6                    _setup 02B4  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0145                   ??_main 003B  
           _write_EEPROM 0337             _ADC_Voltaje1 0072             _ADC_Voltaje2 0040  
           _ADC_Voltaje3 003E             _ADC_Voltaje4 003C                   ?_delay 0076  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 _EECON2 018D         ___awdiv@dividend 0028                   ?_setup 0076  
                 _ANSELH 0189                   i1l1210 03A6                   i1l1212 03AA  
                 i1l1220 0344                   i1l1214 03B0                   i1l1230 034F  
                 i1l1222 0347                   i1l1240 037B                   i1l1232 036A  
                 i1l1224 0348                   i1l1216 0338                   i1l1234 0370  
                 i1l1226 034D                   i1l1218 033E                   i1l1236 0374  
                 i1l1228 034E                   i1l1238 0378                   i1l1360 015A  
                 i1l1352 0145                   i1l1370 016A                   i1l1362 015C  
                 i1l1354 014B                   i1l1380 017F                   i1l1372 0173  
                 i1l1364 015D                   i1l1356 0150                   i1l1390 01DA  
                 i1l1382 018C                   i1l1374 0176                   i1l1366 0166  
                 i1l1358 0155                   i1l1392 01E9                   i1l1384 0199  
                 i1l1368 0169                   i1l1376 0177                   i1l1394 01F8  
                 i1l1386 01C7                   i1l1378 017B                   i1l1388 01CE  
                 ___wmul 02EB                ??___awdiv 002A         __end_of_initUART 0393  
       ___awdiv@quotient 002D                ??_incModo 0020         __end_of_setupADC 0369  
       __end_of_setupPWM 0337                   saved_w 007E  __end_of__initialization 001E  
         __pcstackCOMMON 0076            __end_of_delay 03B7            __end_of_setup 02EB  
     read_EEPROM@address 0076           _OPTION_REGbits 0081                  ??_delay 0078  
       write_EEPROM@data 0076                  ??_setup 0020               __pbssBANK0 003C  
             __pmaintext 0022                  ?___wmul 0020               __pintentry 0004  
              ?_initUART 0076                ?_setupADC 0076                ?_setupPWM 0076  
                ___awdiv 0210                  _address 0070                  __ptext1 0312  
                __ptext2 0351                  __ptext3 02B4                  __ptext4 0279  
                __ptext5 02EB                  __ptext6 0210                  __ptext7 0380  
                __ptext8 0393                  __ptext9 0145                  _incModo 0393  
              _T2CONbits 0012     end_of_initialization 001E               ??_initUART 0020  
    write_EEPROM@address 0077               ??_setupADC 0020                _RCSTAbits 0018  
             ??_setupPWM 0020                _PORTAbits 0005                _PORTBbits 0006  
              _PORTDbits 0008                _PORTEbits 0009                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D                _TXSTAbits 0098  
         __end_of___wmul 0312              _BAUDCTLbits 0187      start_initialization 000F  
            __end_of_map 02B4              __end_of_isr 0210            ??_read_EEPROM 0076  
               ??___wmul 0024              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0026      __end_of_read_EEPROM 0380  
               ?_incModo 0076            ?_write_EEPROM 0076        interrupt_function 0004  
         ___wmul@product 0024                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
         ??_write_EEPROM 0077                map@outmax 0035                map@outmin 0033  
        _option_selected 0042               _EECON1bits 018C              _read_EEPROM 0369  
               __ptext10 0337                 __ptext11 0369                 __ptext12 03A6  
               _initUART 0380                 delay@sec 0076                 _setupADC 0351  
               _setupPWM 0312                 map@value 003A               _INTCONbits 000B  
               intlevel1 0000     __end_of_write_EEPROM 0351               _OSCCONbits 008F  
