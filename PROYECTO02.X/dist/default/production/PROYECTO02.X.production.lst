

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 17 22:35:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     008F                     	;# 
   104     0090                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     0105                     	;# 
   123     0107                     	;# 
   124     0108                     	;# 
   125     0109                     	;# 
   126     010C                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     0185                     	;# 
   132     0187                     	;# 
   133     0188                     	;# 
   134     0189                     	;# 
   135     018C                     	;# 
   136     018D                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     0007                     	;# 
   145     0008                     	;# 
   146     0009                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000D                     	;# 
   151     000E                     	;# 
   152     000E                     	;# 
   153     000F                     	;# 
   154     0010                     	;# 
   155     0011                     	;# 
   156     0012                     	;# 
   157     0013                     	;# 
   158     0014                     	;# 
   159     0015                     	;# 
   160     0015                     	;# 
   161     0016                     	;# 
   162     0017                     	;# 
   163     0018                     	;# 
   164     0019                     	;# 
   165     001A                     	;# 
   166     001B                     	;# 
   167     001B                     	;# 
   168     001C                     	;# 
   169     001D                     	;# 
   170     001E                     	;# 
   171     001F                     	;# 
   172     0081                     	;# 
   173     0085                     	;# 
   174     0086                     	;# 
   175     0087                     	;# 
   176     0088                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215     0019                     _TXREG	set	25
   216     0018                     _RCSTAbits	set	24
   217     0012                     _T2CONbits	set	18
   218     001D                     _CCP2CONbits	set	29
   219     0017                     _CCP1CONbits	set	23
   220     0009                     _PORTE	set	9
   221     0008                     _PORTD	set	8
   222     0007                     _PORTC	set	7
   223     0006                     _PORTB	set	6
   224     0005                     _PORTA	set	5
   225     001B                     _CCPR2L	set	27
   226     0015                     _CCPR1L	set	21
   227     001E                     _ADRESH	set	30
   228     001F                     _ADCON0bits	set	31
   229     0008                     _PORTDbits	set	8
   230     0009                     _PORTEbits	set	9
   231     0005                     _PORTAbits	set	5
   232     0001                     _TMR0	set	1
   233     000B                     _INTCONbits	set	11
   234     000C                     _PIR1bits	set	12
   235     0064                     _TXIF	set	100
   236     009F                     _ADCON1bits	set	159
   237     0098                     _TXSTAbits	set	152
   238     0099                     _SPBRG	set	153
   239     0092                     _PR2	set	146
   240     0087                     _TRISCbits	set	135
   241     0081                     _OPTION_REGbits	set	129
   242     008C                     _PIE1bits	set	140
   243     008F                     _OSCCONbits	set	143
   244     0089                     _TRISE	set	137
   245     0088                     _TRISD	set	136
   246     0087                     _TRISC	set	135
   247     0086                     _TRISB	set	134
   248     0085                     _TRISA	set	133
   249     0189                     _ANSELH	set	393
   250     0188                     _ANSEL	set	392
   251                           
   252                           	psect	cinit
   253     000F                     start_initialization:	
   254                           ; #config settings
   255                           
   256     000F                     __initialization:
   257                           
   258                           ; Clear objects allocated to COMMON
   259     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   260     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   261     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264     0012  1283               	bcf	3,5	;RP0=0, select bank0
   265     0013  1303               	bcf	3,6	;RP1=0, select bank0
   266     0014  01B9               	clrf	__pbssBANK0& (0+127)
   267     0015  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   268     0016  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   269     0017  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   270     0018  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   271     0019  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   272     001A  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   273     001B  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   274     001C                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277     001C                     __end_of__initialization:
   278     001C  0183               	clrf	3
   279     001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282     0077                     __pbssCOMMON:
   283     0077                     _ADC_Voltaje3:
   284     0077                     	ds	2
   285     0079                     _option_selected:
   286     0079                     	ds	1
   287                           
   288                           	psect	bssBANK0
   289     0039                     __pbssBANK0:
   290     0039                     _ADC_Voltaje4:
   291     0039                     	ds	2
   292     003B                     _ADC_Voltaje2:
   293     003B                     	ds	2
   294     003D                     _ADC_Voltaje1:
   295     003D                     	ds	2
   296     003F                     _modo:
   297     003F                     	ds	2
   298                           
   299                           	psect	cstackCOMMON
   300     0070                     __pcstackCOMMON:
   301     0070                     ?_delay:
   302     0070                     ?_setup:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_setupADC:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_setupPWM:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_incModo:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_isr:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     delay@micro:	
   321                           ; 1 bytes @ 0x0
   322                           
   323                           
   324                           ; 2 bytes @ 0x0
   325     0070                     	ds	2
   326     0072                     ??_delay:
   327     0072                     ??_isr:	
   328                           ; 1 bytes @ 0x2
   329                           
   330                           
   331                           ; 1 bytes @ 0x2
   332     0072                     	ds	2
   333     0074                     ??_setup:
   334     0074                     ??_setupADC:	
   335                           ; 1 bytes @ 0x4
   336                           
   337     0074                     ??_setupPWM:	
   338                           ; 1 bytes @ 0x4
   339                           
   340     0074                     ??_incModo:	
   341                           ; 1 bytes @ 0x4
   342                           
   343     0074                     ??___wmul:	
   344                           ; 1 bytes @ 0x4
   345                           
   346     0074                     ___wmul@product:	
   347                           ; 1 bytes @ 0x4
   348                           
   349                           
   350                           ; 2 bytes @ 0x4
   351     0074                     	ds	2
   352     0076                     ??___awdiv:
   353                           
   354                           ; 1 bytes @ 0x6
   355     0076                     	ds	1
   356                           
   357                           	psect	cstackBANK0
   358     0020                     __pcstackBANK0:
   359     0020                     ?___wmul:
   360     0020                     ___wmul@multiplier:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365     0020                     	ds	2
   366     0022                     ___wmul@multiplicand:
   367                           
   368                           ; 2 bytes @ 0x2
   369     0022                     	ds	2
   370     0024                     ?___awdiv:
   371     0024                     ___awdiv@divisor:	
   372                           ; 2 bytes @ 0x4
   373                           
   374                           
   375                           ; 2 bytes @ 0x4
   376     0024                     	ds	2
   377     0026                     ___awdiv@dividend:
   378                           
   379                           ; 2 bytes @ 0x6
   380     0026                     	ds	2
   381     0028                     ___awdiv@counter:
   382                           
   383                           ; 1 bytes @ 0x8
   384     0028                     	ds	1
   385     0029                     ___awdiv@sign:
   386                           
   387                           ; 1 bytes @ 0x9
   388     0029                     	ds	1
   389     002A                     ___awdiv@quotient:
   390                           
   391                           ; 2 bytes @ 0xA
   392     002A                     	ds	2
   393     002C                     ?_map:
   394     002C                     map@inputmin:	
   395                           ; 2 bytes @ 0xC
   396                           
   397                           
   398                           ; 2 bytes @ 0xC
   399     002C                     	ds	2
   400     002E                     map@inputmax:
   401                           
   402                           ; 2 bytes @ 0xE
   403     002E                     	ds	2
   404     0030                     map@outmin:
   405                           
   406                           ; 2 bytes @ 0x10
   407     0030                     	ds	2
   408     0032                     map@outmax:
   409                           
   410                           ; 2 bytes @ 0x12
   411     0032                     	ds	2
   412     0034                     ??_map:
   413                           
   414                           ; 1 bytes @ 0x14
   415     0034                     	ds	3
   416     0037                     map@value:
   417                           
   418                           ; 1 bytes @ 0x17
   419     0037                     	ds	1
   420     0038                     ??_main:
   421                           
   422                           ; 1 bytes @ 0x18
   423     0038                     	ds	1
   424                           
   425                           	psect	maintext
   426     0020                     __pmaintext:	
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 88 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : B00/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0
   448 ;;      Temps:          0       1       0       0       0
   449 ;;      Totals:         0       1       0       0       0
   450 ;;Total ram usage:        1 bytes
   451 ;; Hardware stack levels required when called: 4
   452 ;; This function calls:
   453 ;;		_incModo
   454 ;;		_map
   455 ;;		_setup
   456 ;;		_setupADC
   457 ;;		_setupPWM
   458 ;; This function is called by:
   459 ;;		Startup code after reset
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463     0020                     _main:	
   464                           ;psect for function _main
   465                           
   466     0020                     l1359:	
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;main.c: 89:     setup();
   472     0020  120A  118A  220E  120A  118A  	fcall	_setup
   473                           
   474                           ;main.c: 90:     setupADC();
   475     0025  120A  118A  228B  120A  118A  	fcall	_setupADC
   476                           
   477                           ;main.c: 91:     setupPWM();
   478     002A  120A  118A  2266  120A  118A  	fcall	_setupPWM
   479     002F                     l1361:
   480                           
   481                           ;main.c: 92:     modo = 1;
   482     002F  3001               	movlw	1
   483     0030  1283               	bcf	3,5	;RP0=0, select bank0
   484     0031  1303               	bcf	3,6	;RP1=0, select bank0
   485     0032  00BF               	movwf	_modo
   486     0033  3000               	movlw	0
   487     0034  00C0               	movwf	_modo+1
   488     0035                     l1363:
   489                           
   490                           ;main.c: 98:         if (PORTEbits.RE2){
   491     0035  1283               	bcf	3,5	;RP0=0, select bank0
   492     0036  1303               	bcf	3,6	;RP1=0, select bank0
   493     0037  1D09               	btfss	9,2	;volatile
   494     0038  283A               	goto	u691
   495     0039  283B               	goto	u690
   496     003A                     u691:
   497     003A  2921               	goto	l1415
   498     003B                     u690:
   499     003B                     l113:	
   500                           ;main.c: 101:             }
   501                           
   502                           
   503                           ;main.c: 99:             while(PORTEbits.RE2){
   504     003B  1909               	btfsc	9,2	;volatile
   505     003C  283E               	goto	u701
   506     003D  283F               	goto	u700
   507     003E                     u701:
   508     003E  283B               	goto	l113
   509     003F                     u700:
   510     003F                     l1367:
   511                           
   512                           ;main.c: 102:             incModo();
   513     003F  120A  118A  22A2  120A  118A  	fcall	_incModo
   514     0044  2921               	goto	l1415
   515     0045                     l117:	
   516                           ;main.c: 107:             case (1):
   517                           
   518                           
   519                           ;main.c: 110:                 PORTDbits.RD0 = 0;
   520     0045  1008               	bcf	8,0	;volatile
   521                           
   522                           ;main.c: 111:                 PORTDbits.RD1 = 0;
   523     0046  1088               	bcf	8,1	;volatile
   524                           
   525                           ;main.c: 112:                 PORTDbits.RD2 = 1;
   526     0047  1508               	bsf	8,2	;volatile
   527     0048                     l1369:
   528                           
   529                           ;main.c: 115:                 ADCON0bits.CHS = 0b0000;
   530     0048  30C3               	movlw	-61
   531     0049  059F               	andwf	31,f	;volatile
   532     004A                     l1371:
   533                           
   534                           ;main.c: 116:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   535     004A  3003               	movlw	3
   536     004B  1283               	bcf	3,5	;RP0=0, select bank0
   537     004C  1303               	bcf	3,6	;RP1=0, select bank0
   538     004D  00B8               	movwf	??_main
   539     004E                     u757:
   540     004E  0BB8               	decfsz	??_main,f
   541     004F  284E               	goto	u757
   542     0050                     l1373:
   543                           
   544                           ;main.c: 117:                 ADCON0bits.GO = 1;
   545     0050  1283               	bcf	3,5	;RP0=0, select bank0
   546     0051  1303               	bcf	3,6	;RP1=0, select bank0
   547     0052  149F               	bsf	31,1	;volatile
   548     0053                     l118:	
   549                           ;main.c: 120:                 }
   550                           
   551                           
   552                           ;main.c: 118:                 while (ADCON0bits.GO == 1){
   553     0053  189F               	btfsc	31,1	;volatile
   554     0054  2856               	goto	u711
   555     0055  2857               	goto	u710
   556     0056                     u711:
   557     0056  2853               	goto	l118
   558     0057                     u710:
   559     0057                     l1375:
   560                           
   561                           ;main.c: 121:                 ADC_Voltaje1 = map(ADRESH, 0, 255, 5, 17);
   562     0057  3000               	movlw	0
   563     0058  00AC               	movwf	map@inputmin
   564     0059  00AD               	movwf	map@inputmin+1
   565     005A  30FF               	movlw	255
   566     005B  00AE               	movwf	map@inputmax
   567     005C  3000               	movlw	0
   568     005D  00AF               	movwf	map@inputmax+1
   569     005E  3005               	movlw	5
   570     005F  00B0               	movwf	map@outmin
   571     0060  3000               	movlw	0
   572     0061  00B1               	movwf	map@outmin+1
   573     0062  3011               	movlw	17
   574     0063  00B2               	movwf	map@outmax
   575     0064  3000               	movlw	0
   576     0065  00B3               	movwf	map@outmax+1
   577     0066  081E               	movf	30,w	;volatile
   578     0067  120A  118A  219F  120A  118A  	fcall	_map
   579     006C  1283               	bcf	3,5	;RP0=0, select bank0
   580     006D  1303               	bcf	3,6	;RP1=0, select bank0
   581     006E  082D               	movf	?_map+1,w
   582     006F  00BE               	movwf	_ADC_Voltaje1+1
   583     0070  082C               	movf	?_map,w
   584     0071  00BD               	movwf	_ADC_Voltaje1
   585     0072                     l1377:
   586                           
   587                           ;main.c: 122:                 CCPR1L = ADC_Voltaje1;
   588     0072  083D               	movf	_ADC_Voltaje1,w
   589     0073  0095               	movwf	21	;volatile
   590     0074                     l1379:
   591                           
   592                           ;main.c: 123:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   593     0074  3003               	movlw	3
   594     0075  1283               	bcf	3,5	;RP0=0, select bank0
   595     0076  1303               	bcf	3,6	;RP1=0, select bank0
   596     0077  00B8               	movwf	??_main
   597     0078                     u767:
   598     0078  0BB8               	decfsz	??_main,f
   599     0079  2878               	goto	u767
   600     007A                     l1381:
   601                           
   602                           ;main.c: 126:                 ADCON0bits.CHS = 0b0001;
   603     007A  1283               	bcf	3,5	;RP0=0, select bank0
   604     007B  1303               	bcf	3,6	;RP1=0, select bank0
   605     007C  081F               	movf	31,w	;volatile
   606     007D  39C3               	andlw	-61
   607     007E  3804               	iorlw	4
   608     007F  009F               	movwf	31	;volatile
   609     0080                     l1383:
   610                           
   611                           ;main.c: 127:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   612     0080  3003               	movlw	3
   613     0081  1283               	bcf	3,5	;RP0=0, select bank0
   614     0082  1303               	bcf	3,6	;RP1=0, select bank0
   615     0083  00B8               	movwf	??_main
   616     0084                     u777:
   617     0084  0BB8               	decfsz	??_main,f
   618     0085  2884               	goto	u777
   619     0086                     l1385:
   620                           
   621                           ;main.c: 128:                 ADCON0bits.GO = 1;
   622     0086  1283               	bcf	3,5	;RP0=0, select bank0
   623     0087  1303               	bcf	3,6	;RP1=0, select bank0
   624     0088  149F               	bsf	31,1	;volatile
   625     0089                     l121:	
   626                           ;main.c: 131:                 }
   627                           
   628                           
   629                           ;main.c: 129:                 while (ADCON0bits.GO == 1){
   630     0089  189F               	btfsc	31,1	;volatile
   631     008A  288C               	goto	u721
   632     008B  288D               	goto	u720
   633     008C                     u721:
   634     008C  2889               	goto	l121
   635     008D                     u720:
   636     008D                     l1387:
   637                           
   638                           ;main.c: 132:                 ADC_Voltaje2 = map(ADRESH, 0, 255, 5, 17);
   639     008D  3000               	movlw	0
   640     008E  00AC               	movwf	map@inputmin
   641     008F  00AD               	movwf	map@inputmin+1
   642     0090  30FF               	movlw	255
   643     0091  00AE               	movwf	map@inputmax
   644     0092  3000               	movlw	0
   645     0093  00AF               	movwf	map@inputmax+1
   646     0094  3005               	movlw	5
   647     0095  00B0               	movwf	map@outmin
   648     0096  3000               	movlw	0
   649     0097  00B1               	movwf	map@outmin+1
   650     0098  3011               	movlw	17
   651     0099  00B2               	movwf	map@outmax
   652     009A  3000               	movlw	0
   653     009B  00B3               	movwf	map@outmax+1
   654     009C  081E               	movf	30,w	;volatile
   655     009D  120A  118A  219F  120A  118A  	fcall	_map
   656     00A2  1283               	bcf	3,5	;RP0=0, select bank0
   657     00A3  1303               	bcf	3,6	;RP1=0, select bank0
   658     00A4  082D               	movf	?_map+1,w
   659     00A5  00BC               	movwf	_ADC_Voltaje2+1
   660     00A6  082C               	movf	?_map,w
   661     00A7  00BB               	movwf	_ADC_Voltaje2
   662     00A8                     l1389:
   663                           
   664                           ;main.c: 133:                 CCPR2L = ADC_Voltaje2;
   665     00A8  083B               	movf	_ADC_Voltaje2,w
   666     00A9  009B               	movwf	27	;volatile
   667     00AA                     l1391:
   668                           
   669                           ;main.c: 134:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   670     00AA  3003               	movlw	3
   671     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   672     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   673     00AD  00B8               	movwf	??_main
   674     00AE                     u787:
   675     00AE  0BB8               	decfsz	??_main,f
   676     00AF  28AE               	goto	u787
   677     00B0                     l1393:
   678                           
   679                           ;main.c: 137:                 ADCON0bits.CHS = 0b0010;
   680     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   681     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   682     00B2  081F               	movf	31,w	;volatile
   683     00B3  39C3               	andlw	-61
   684     00B4  3808               	iorlw	8
   685     00B5  009F               	movwf	31	;volatile
   686     00B6                     l1395:
   687                           
   688                           ;main.c: 138:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   689     00B6  3003               	movlw	3
   690     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   691     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   692     00B9  00B8               	movwf	??_main
   693     00BA                     u797:
   694     00BA  0BB8               	decfsz	??_main,f
   695     00BB  28BA               	goto	u797
   696     00BC                     l1397:
   697                           
   698                           ;main.c: 139:                 ADCON0bits.GO = 1;
   699     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   700     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   701     00BE  149F               	bsf	31,1	;volatile
   702     00BF                     l124:	
   703                           ;main.c: 142:                 }
   704                           
   705                           
   706                           ;main.c: 140:                 while (ADCON0bits.GO == 1){
   707     00BF  189F               	btfsc	31,1	;volatile
   708     00C0  28C2               	goto	u731
   709     00C1  28C3               	goto	u730
   710     00C2                     u731:
   711     00C2  28BF               	goto	l124
   712     00C3                     u730:
   713     00C3                     l1399:
   714                           
   715                           ;main.c: 143:                 ADC_Voltaje3 = map(ADRESH, 0, 255, 5, 17);
   716     00C3  3000               	movlw	0
   717     00C4  00AC               	movwf	map@inputmin
   718     00C5  00AD               	movwf	map@inputmin+1
   719     00C6  30FF               	movlw	255
   720     00C7  00AE               	movwf	map@inputmax
   721     00C8  3000               	movlw	0
   722     00C9  00AF               	movwf	map@inputmax+1
   723     00CA  3005               	movlw	5
   724     00CB  00B0               	movwf	map@outmin
   725     00CC  3000               	movlw	0
   726     00CD  00B1               	movwf	map@outmin+1
   727     00CE  3011               	movlw	17
   728     00CF  00B2               	movwf	map@outmax
   729     00D0  3000               	movlw	0
   730     00D1  00B3               	movwf	map@outmax+1
   731     00D2  081E               	movf	30,w	;volatile
   732     00D3  120A  118A  219F  120A  118A  	fcall	_map
   733     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   734     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   735     00DA  082D               	movf	?_map+1,w
   736     00DB  00F8               	movwf	_ADC_Voltaje3+1
   737     00DC  082C               	movf	?_map,w
   738     00DD  00F7               	movwf	_ADC_Voltaje3
   739     00DE                     l1401:
   740                           
   741                           ;main.c: 144:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   742     00DE  3003               	movlw	3
   743     00DF  1283               	bcf	3,5	;RP0=0, select bank0
   744     00E0  1303               	bcf	3,6	;RP1=0, select bank0
   745     00E1  00B8               	movwf	??_main
   746     00E2                     u807:
   747     00E2  0BB8               	decfsz	??_main,f
   748     00E3  28E2               	goto	u807
   749     00E4                     l1403:
   750                           
   751                           ;main.c: 147:                 ADCON0bits.CHS = 0b0011;
   752     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   753     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   754     00E6  081F               	movf	31,w	;volatile
   755     00E7  39C3               	andlw	-61
   756     00E8  380C               	iorlw	12
   757     00E9  009F               	movwf	31	;volatile
   758     00EA                     l1405:
   759                           
   760                           ;main.c: 148:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   761     00EA  3003               	movlw	3
   762     00EB  1283               	bcf	3,5	;RP0=0, select bank0
   763     00EC  1303               	bcf	3,6	;RP1=0, select bank0
   764     00ED  00B8               	movwf	??_main
   765     00EE                     u817:
   766     00EE  0BB8               	decfsz	??_main,f
   767     00EF  28EE               	goto	u817
   768     00F0                     l1407:
   769                           
   770                           ;main.c: 149:                 ADCON0bits.GO = 1;
   771     00F0  1283               	bcf	3,5	;RP0=0, select bank0
   772     00F1  1303               	bcf	3,6	;RP1=0, select bank0
   773     00F2  149F               	bsf	31,1	;volatile
   774     00F3                     l127:	
   775                           ;main.c: 152:                 }
   776                           
   777                           
   778                           ;main.c: 150:                 while (ADCON0bits.GO == 1){
   779     00F3  189F               	btfsc	31,1	;volatile
   780     00F4  28F6               	goto	u741
   781     00F5  28F7               	goto	u740
   782     00F6                     u741:
   783     00F6  28F3               	goto	l127
   784     00F7                     u740:
   785     00F7                     l1409:
   786                           
   787                           ;main.c: 153:                 ADC_Voltaje4 = map(ADRESH, 0, 255, 5, 17);
   788     00F7  3000               	movlw	0
   789     00F8  00AC               	movwf	map@inputmin
   790     00F9  00AD               	movwf	map@inputmin+1
   791     00FA  30FF               	movlw	255
   792     00FB  00AE               	movwf	map@inputmax
   793     00FC  3000               	movlw	0
   794     00FD  00AF               	movwf	map@inputmax+1
   795     00FE  3005               	movlw	5
   796     00FF  00B0               	movwf	map@outmin
   797     0100  3000               	movlw	0
   798     0101  00B1               	movwf	map@outmin+1
   799     0102  3011               	movlw	17
   800     0103  00B2               	movwf	map@outmax
   801     0104  3000               	movlw	0
   802     0105  00B3               	movwf	map@outmax+1
   803     0106  081E               	movf	30,w	;volatile
   804     0107  120A  118A  219F  120A  118A  	fcall	_map
   805     010C  1283               	bcf	3,5	;RP0=0, select bank0
   806     010D  1303               	bcf	3,6	;RP1=0, select bank0
   807     010E  082D               	movf	?_map+1,w
   808     010F  00BA               	movwf	_ADC_Voltaje4+1
   809     0110  082C               	movf	?_map,w
   810     0111  00B9               	movwf	_ADC_Voltaje4
   811     0112                     l1411:
   812                           
   813                           ;main.c: 154:                 _delay((unsigned long)((100)*(500000/4000000.0)));
   814     0112  3003               	movlw	3
   815     0113  1283               	bcf	3,5	;RP0=0, select bank0
   816     0114  1303               	bcf	3,6	;RP1=0, select bank0
   817     0115  00B8               	movwf	??_main
   818     0116                     u827:
   819     0116  0BB8               	decfsz	??_main,f
   820     0117  2916               	goto	u827
   821                           
   822                           ;main.c: 156:                 break;
   823     0118  2835               	goto	l1363
   824     0119                     l131:	
   825                           ;main.c: 158:             case (2):
   826                           
   827                           
   828                           ;main.c: 161:                 PORTDbits.RD0 = 1;
   829     0119  1408               	bsf	8,0	;volatile
   830                           
   831                           ;main.c: 162:                 PORTDbits.RD1 = 0;
   832     011A  1088               	bcf	8,1	;volatile
   833                           
   834                           ;main.c: 163:                 PORTDbits.RD2 = 0;
   835     011B  1108               	bcf	8,2	;volatile
   836                           
   837                           ;main.c: 167:                 break;
   838     011C  2835               	goto	l1363
   839     011D                     l132:	
   840                           ;main.c: 168:             case(3):
   841                           
   842                           
   843                           ;main.c: 171:                 PORTDbits.RD0 = 0;
   844     011D  1008               	bcf	8,0	;volatile
   845                           
   846                           ;main.c: 172:                 PORTDbits.RD1 = 1;
   847     011E  1488               	bsf	8,1	;volatile
   848                           
   849                           ;main.c: 173:                 PORTDbits.RD2 = 0;
   850     011F  1108               	bcf	8,2	;volatile
   851                           
   852                           ;main.c: 212:                 break;
   853     0120  2835               	goto	l1363
   854     0121                     l1415:
   855                           
   856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   857                           ; Switch size 1, requested type "simple"
   858                           ; Number of cases is 1, Range of values is 0 to 0
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            4     3 (average)
   862                           ; direct_byte           11     8 (fixed)
   863                           ; jumptable            260     6 (fixed)
   864                           ;	Chosen strategy is simple_byte
   865     0121  1283               	bcf	3,5	;RP0=0, select bank0
   866     0122  1303               	bcf	3,6	;RP1=0, select bank0
   867     0123  0840               	movf	_modo+1,w
   868     0124  3A00               	xorlw	0	; case 0
   869     0125  1903               	skipnz
   870     0126  2928               	goto	l1441
   871     0127  2835               	goto	l1363
   872     0128                     l1441:
   873                           
   874                           ; Switch size 1, requested type "simple"
   875                           ; Number of cases is 3, Range of values is 1 to 3
   876                           ; switch strategies available:
   877                           ; Name         Instructions Cycles
   878                           ; simple_byte           10     6 (average)
   879                           ; direct_byte           20    11 (fixed)
   880                           ; jumptable            263     9 (fixed)
   881                           ;	Chosen strategy is simple_byte
   882     0128  083F               	movf	_modo,w
   883     0129  3A01               	xorlw	1	; case 1
   884     012A  1903               	skipnz
   885     012B  2845               	goto	l117
   886     012C  3A03               	xorlw	3	; case 2
   887     012D  1903               	skipnz
   888     012E  2919               	goto	l131
   889     012F  3A01               	xorlw	1	; case 3
   890     0130  1903               	skipnz
   891     0131  291D               	goto	l132
   892     0132  2835               	goto	l1363
   893     0133  120A  118A  280C   	ljmp	start
   894     0136                     __end_of_main:
   895                           
   896                           	psect	text1
   897     0266                     __ptext1:	
   898 ;; *************** function _setupPWM *****************
   899 ;; Defined at:
   900 ;;		line 274 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 2
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928     0266                     _setupPWM:	
   929                           ;psect for function _setupPWM
   930                           
   931     0266                     l1161:	
   932                           ;incstack = 0
   933                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
   934                           
   935                           
   936                           ;main.c: 275:     TRISCbits.TRISC2 = 1;
   937     0266  1683               	bsf	3,5	;RP0=1, select bank1
   938     0267  1303               	bcf	3,6	;RP1=0, select bank1
   939     0268  1507               	bsf	7,2	;volatile
   940                           
   941                           ;main.c: 276:     TRISCbits.TRISC1 = 1;
   942     0269  1487               	bsf	7,1	;volatile
   943     026A                     l1163:
   944                           
   945                           ;main.c: 278:     PR2 = 255;
   946     026A  30FF               	movlw	255
   947     026B  0092               	movwf	18	;volatile
   948     026C                     l1165:
   949                           
   950                           ;main.c: 280:     CCP1CONbits.P1M = 0b00;
   951     026C  303F               	movlw	-193
   952     026D  1283               	bcf	3,5	;RP0=0, select bank0
   953     026E  1303               	bcf	3,6	;RP1=0, select bank0
   954     026F  0597               	andwf	23,f	;volatile
   955     0270                     l1167:
   956                           
   957                           ;main.c: 283:     CCP1CONbits.CCP1M = 0b1100;
   958     0270  0817               	movf	23,w	;volatile
   959     0271  39F0               	andlw	-16
   960     0272  380C               	iorlw	12
   961     0273  0097               	movwf	23	;volatile
   962     0274                     l1169:
   963                           
   964                           ;main.c: 287:     CCP2CONbits.CCP2M = 0b1111;
   965     0274  300F               	movlw	15
   966     0275  049D               	iorwf	29,f	;volatile
   967     0276                     l1171:
   968                           
   969                           ;main.c: 290:     CCP1CONbits.DC1B = 0b11;
   970     0276  3030               	movlw	48
   971     0277  0497               	iorwf	23,f	;volatile
   972                           
   973                           ;main.c: 291:     CCPR1L = 11;
   974     0278  300B               	movlw	11
   975     0279  0095               	movwf	21	;volatile
   976     027A                     l1173:
   977                           
   978                           ;main.c: 294:     CCP2CONbits.DC2B1 = 0b1;
   979     027A  169D               	bsf	29,5	;volatile
   980     027B                     l1175:
   981                           
   982                           ;main.c: 295:     CCP2CONbits.DC2B0 = 0b1;
   983     027B  161D               	bsf	29,4	;volatile
   984                           
   985                           ;main.c: 296:     CCPR2L = 11;
   986     027C  300B               	movlw	11
   987     027D  009B               	movwf	27	;volatile
   988     027E                     l1177:
   989                           
   990                           ;main.c: 299:     PIR1bits.TMR2IF = 0;
   991     027E  108C               	bcf	12,1	;volatile
   992     027F                     l1179:
   993                           
   994                           ;main.c: 300:     T2CONbits.T2CKPS = 0b11;
   995     027F  3003               	movlw	3
   996     0280  0492               	iorwf	18,f	;volatile
   997     0281                     l1181:
   998                           
   999                           ;main.c: 301:     T2CONbits.TMR2ON = 1;
  1000     0281  1512               	bsf	18,2	;volatile
  1001     0282                     l141:	
  1002                           ;main.c: 305:     }
  1003                           
  1004                           
  1005                           ;main.c: 303:     while(!PIR1bits.TMR2IF){
  1006     0282  1C8C               	btfss	12,1	;volatile
  1007     0283  2A85               	goto	u441
  1008     0284  2A86               	goto	u440
  1009     0285                     u441:
  1010     0285  2A82               	goto	l141
  1011     0286                     u440:
  1012     0286                     l143:
  1013                           
  1014                           ;main.c: 307:     TRISCbits.TRISC2=0;
  1015     0286  1683               	bsf	3,5	;RP0=1, select bank1
  1016     0287  1303               	bcf	3,6	;RP1=0, select bank1
  1017     0288  1107               	bcf	7,2	;volatile
  1018                           
  1019                           ;main.c: 308:     TRISCbits.TRISC1=0;
  1020     0289  1087               	bcf	7,1	;volatile
  1021     028A                     l144:
  1022     028A  0008               	return
  1023     028B                     __end_of_setupPWM:
  1024                           
  1025                           	psect	text2
  1026     028B                     __ptext2:	
  1027 ;; *************** function _setupADC *****************
  1028 ;; Defined at:
  1029 ;;		line 325 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0
  1045 ;;      Temps:          1       0       0       0       0
  1046 ;;      Totals:         1       0       0       0       0
  1047 ;;Total ram usage:        1 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 2
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057     028B                     _setupADC:	
  1058                           ;psect for function _setupADC
  1059                           
  1060     028B                     l1147:	
  1061                           ;incstack = 0
  1062                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1063                           
  1064                           
  1065                           ;main.c: 327:     ADCON0bits.ADCS = 0b01;
  1066     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1067     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1068     028D  081F               	movf	31,w	;volatile
  1069     028E  393F               	andlw	-193
  1070     028F  3840               	iorlw	64
  1071     0290  009F               	movwf	31	;volatile
  1072     0291                     l1149:
  1073                           
  1074                           ;main.c: 329:     ADCON1bits.VCFG1 = 0;
  1075     0291  1683               	bsf	3,5	;RP0=1, select bank1
  1076     0292  1303               	bcf	3,6	;RP1=0, select bank1
  1077     0293  129F               	bcf	31,5	;volatile
  1078     0294                     l1151:
  1079                           
  1080                           ;main.c: 330:     ADCON1bits.VCFG0 = 0;
  1081     0294  121F               	bcf	31,4	;volatile
  1082     0295                     l1153:
  1083                           
  1084                           ;main.c: 333:     ADCON1bits.ADFM = 0;
  1085     0295  139F               	bcf	31,7	;volatile
  1086                           
  1087                           ;main.c: 336:     ADCON0bits.CHS = 0b0000;
  1088     0296  30C3               	movlw	-61
  1089     0297  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0298  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0299  059F               	andwf	31,f	;volatile
  1092     029A                     l1155:
  1093                           
  1094                           ;main.c: 338:     ADCON0bits.ADON = 1;
  1095     029A  141F               	bsf	31,0	;volatile
  1096     029B                     l1157:
  1097                           
  1098                           ;main.c: 340:     PIR1bits.ADIF = 0;
  1099     029B  130C               	bcf	12,6	;volatile
  1100     029C                     l1159:
  1101                           
  1102                           ;main.c: 343:     _delay((unsigned long)((100)*(500000/4000000.0)));
  1103     029C  3003               	movlw	3
  1104     029D  00F4               	movwf	??_setupADC
  1105     029E                     u837:
  1106     029E  0BF4               	decfsz	??_setupADC,f
  1107     029F  2A9E               	goto	u837
  1108     02A0  2AA1               	nop2
  1109     02A1                     l150:
  1110     02A1  0008               	return
  1111     02A2                     __end_of_setupADC:
  1112                           
  1113                           	psect	text3
  1114     020E                     __ptext3:	
  1115 ;; *************** function _setup *****************
  1116 ;; Defined at:
  1117 ;;		line 226 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0
  1134 ;;      Totals:         0       0       0       0       0
  1135 ;;Total ram usage:        0 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 2
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145     020E                     _setup:	
  1146                           ;psect for function _setup
  1147                           
  1148     020E                     l1105:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _setup: [wreg+status,2+status,0]
  1151                           
  1152                           
  1153                           ;main.c: 229:     ANSEL = 0b00001111;
  1154     020E  300F               	movlw	15
  1155     020F  1683               	bsf	3,5	;RP0=1, select bank3
  1156     0210  1703               	bsf	3,6	;RP1=1, select bank3
  1157     0211  0088               	movwf	8	;volatile
  1158     0212                     l1107:
  1159                           
  1160                           ;main.c: 230:     ANSELH = 0;
  1161     0212  0189               	clrf	9	;volatile
  1162     0213                     l1109:
  1163                           
  1164                           ;main.c: 233:     TRISA = 0b00001111;
  1165     0213  300F               	movlw	15
  1166     0214  1683               	bsf	3,5	;RP0=1, select bank1
  1167     0215  1303               	bcf	3,6	;RP1=0, select bank1
  1168     0216  0085               	movwf	5	;volatile
  1169                           
  1170                           ;main.c: 234:     TRISB = 0b00000000;
  1171     0217  0186               	clrf	6	;volatile
  1172     0218                     l1111:
  1173                           
  1174                           ;main.c: 235:     TRISC = 0b00000110;
  1175     0218  3006               	movlw	6
  1176     0219  0087               	movwf	7	;volatile
  1177     021A                     l1113:
  1178                           
  1179                           ;main.c: 236:     TRISD = 0b00000000;
  1180     021A  0188               	clrf	8	;volatile
  1181                           
  1182                           ;main.c: 237:     TRISE = 0b00000100;
  1183     021B  3004               	movlw	4
  1184     021C  0089               	movwf	9	;volatile
  1185     021D                     l1115:
  1186                           
  1187                           ;main.c: 239:     PORTA = 0b00000000;
  1188     021D  1283               	bcf	3,5	;RP0=0, select bank0
  1189     021E  1303               	bcf	3,6	;RP1=0, select bank0
  1190     021F  0185               	clrf	5	;volatile
  1191     0220                     l1117:
  1192                           
  1193                           ;main.c: 240:     PORTB = 0b00000000;
  1194     0220  0186               	clrf	6	;volatile
  1195     0221                     l1119:
  1196                           
  1197                           ;main.c: 241:     PORTC = 0b00000000;
  1198     0221  0187               	clrf	7	;volatile
  1199     0222                     l1121:
  1200                           
  1201                           ;main.c: 242:     PORTD = 0b00000000;
  1202     0222  0188               	clrf	8	;volatile
  1203     0223                     l1123:
  1204                           
  1205                           ;main.c: 243:     PORTE = 0b00000000;
  1206     0223  0189               	clrf	9	;volatile
  1207     0224                     l1125:
  1208                           
  1209                           ;main.c: 253:     OSCCONbits.IRCF = 0b011;
  1210     0224  1683               	bsf	3,5	;RP0=1, select bank1
  1211     0225  1303               	bcf	3,6	;RP1=0, select bank1
  1212     0226  080F               	movf	15,w	;volatile
  1213     0227  398F               	andlw	-113
  1214     0228  3830               	iorlw	48
  1215     0229  008F               	movwf	15	;volatile
  1216     022A                     l1127:
  1217                           
  1218                           ;main.c: 254:     OSCCONbits.SCS = 1;
  1219     022A  140F               	bsf	15,0	;volatile
  1220     022B                     l1129:
  1221                           
  1222                           ;main.c: 258:     INTCONbits.GIE = 1;
  1223     022B  178B               	bsf	11,7	;volatile
  1224     022C                     l1131:
  1225                           
  1226                           ;main.c: 261:     PIE1bits.ADIE = 1;
  1227     022C  170C               	bsf	12,6	;volatile
  1228     022D                     l1133:
  1229                           
  1230                           ;main.c: 262:     INTCONbits.TMR0IE = 1;
  1231     022D  168B               	bsf	11,5	;volatile
  1232     022E                     l1135:
  1233                           
  1234                           ;main.c: 264:     PIR1bits.ADIF = 0;
  1235     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1236     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1237     0230  130C               	bcf	12,6	;volatile
  1238     0231                     l1137:
  1239                           
  1240                           ;main.c: 267:     OPTION_REGbits.T0CS = 0;
  1241     0231  1683               	bsf	3,5	;RP0=1, select bank1
  1242     0232  1303               	bcf	3,6	;RP1=0, select bank1
  1243     0233  1281               	bcf	1,5	;volatile
  1244     0234                     l1139:
  1245                           
  1246                           ;main.c: 268:     OPTION_REGbits.PSA = 0;
  1247     0234  1181               	bcf	1,3	;volatile
  1248     0235                     l1141:
  1249                           
  1250                           ;main.c: 269:     OPTION_REGbits.PS = 0b011;
  1251     0235  0801               	movf	1,w	;volatile
  1252     0236  39F8               	andlw	-8
  1253     0237  3803               	iorlw	3
  1254     0238  0081               	movwf	1	;volatile
  1255     0239                     l1143:
  1256                           
  1257                           ;main.c: 270:     TMR0 = 100;
  1258     0239  3064               	movlw	100
  1259     023A  1283               	bcf	3,5	;RP0=0, select bank0
  1260     023B  1303               	bcf	3,6	;RP1=0, select bank0
  1261     023C  0081               	movwf	1	;volatile
  1262     023D                     l1145:
  1263                           
  1264                           ;main.c: 271:     INTCONbits.T0IF = 0;
  1265     023D  110B               	bcf	11,2	;volatile
  1266     023E                     l138:
  1267     023E  0008               	return
  1268     023F                     __end_of_setup:
  1269                           
  1270                           	psect	text4
  1271     019F                     __ptext4:	
  1272 ;; *************** function _map *****************
  1273 ;; Defined at:
  1274 ;;		line 362 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  value           1    wreg     unsigned char 
  1277 ;;  inputmin        2   12[BANK0 ] int 
  1278 ;;  inputmax        2   14[BANK0 ] int 
  1279 ;;  outmin          2   16[BANK0 ] int 
  1280 ;;  outmax          2   18[BANK0 ] int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  value           1   23[BANK0 ] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   12[BANK0 ] unsigned int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       8       0       0       0
  1293 ;;      Locals:         0       1       0       0       0
  1294 ;;      Temps:          0       3       0       0       0
  1295 ;;      Totals:         0      12       0       0       0
  1296 ;;Total ram usage:       12 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 3
  1299 ;; This function calls:
  1300 ;;		___awdiv
  1301 ;;		___wmul
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307     019F                     _map:	
  1308                           ;psect for function _map
  1309                           
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1313                           ;map@value stored from wreg
  1314     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1315     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1316     01A1  00B7               	movwf	map@value
  1317     01A2                     l1355:
  1318                           
  1319                           ;main.c: 362: unsigned int map(uint8_t value, int inputmin,;main.c: 363:                
      +                             int inputmax, int outmin, int outmax){;main.c: 364:     return ((value - inputmin)*(o
      +                          utmax-outmin)) / ((inputmax-inputmin)+outmin);
  1320     01A2  082C               	movf	map@inputmin,w
  1321     01A3  022E               	subwf	map@inputmax,w
  1322     01A4  00B4               	movwf	??_map
  1323     01A5  082D               	movf	map@inputmin+1,w
  1324     01A6  1C03               	skipc
  1325     01A7  0A2D               	incf	map@inputmin+1,w
  1326     01A8  022F               	subwf	map@inputmax+1,w
  1327     01A9  00B5               	movwf	??_map+1
  1328     01AA  0830               	movf	map@outmin,w
  1329     01AB  0734               	addwf	??_map,w
  1330     01AC  00A4               	movwf	___awdiv@divisor
  1331     01AD  0831               	movf	map@outmin+1,w
  1332     01AE  1803               	skipnc
  1333     01AF  0A31               	incf	map@outmin+1,w
  1334     01B0  0735               	addwf	??_map+1,w
  1335     01B1  00A5               	movwf	___awdiv@divisor+1
  1336     01B2  0837               	movf	map@value,w
  1337     01B3  00B6               	movwf	??_map+2
  1338     01B4  082C               	movf	map@inputmin,w
  1339     01B5  0236               	subwf	??_map+2,w
  1340     01B6  00A0               	movwf	___wmul@multiplier
  1341     01B7  092D               	comf	map@inputmin+1,w
  1342     01B8  1803               	skipnc
  1343     01B9  3E01               	addlw	1
  1344     01BA  00A1               	movwf	___wmul@multiplier+1
  1345     01BB  0830               	movf	map@outmin,w
  1346     01BC  0232               	subwf	map@outmax,w
  1347     01BD  00A2               	movwf	___wmul@multiplicand
  1348     01BE  0831               	movf	map@outmin+1,w
  1349     01BF  1C03               	skipc
  1350     01C0  0A31               	incf	map@outmin+1,w
  1351     01C1  0233               	subwf	map@outmax+1,w
  1352     01C2  00A3               	movwf	___wmul@multiplicand+1
  1353     01C3  120A  118A  223F  120A  118A  	fcall	___wmul
  1354     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1355     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1356     01CA  0821               	movf	?___wmul+1,w
  1357     01CB  00A7               	movwf	___awdiv@dividend+1
  1358     01CC  0820               	movf	?___wmul,w
  1359     01CD  00A6               	movwf	___awdiv@dividend
  1360     01CE  120A  118A  2136  120A  118A  	fcall	___awdiv
  1361     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1362     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1363     01D5  0825               	movf	?___awdiv+1,w
  1364     01D6  00AD               	movwf	?_map+1
  1365     01D7  0824               	movf	?___awdiv,w
  1366     01D8  00AC               	movwf	?_map
  1367     01D9                     l164:
  1368     01D9  0008               	return
  1369     01DA                     __end_of_map:
  1370                           
  1371                           	psect	text5
  1372     023F                     __ptext5:	
  1373 ;; *************** function ___wmul *****************
  1374 ;; Defined at:
  1375 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1378 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  product         2    4[COMMON] unsigned int 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2    0[BANK0 ] unsigned int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         0       4       0       0       0
  1391 ;;      Locals:         2       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0
  1393 ;;      Totals:         2       4       0       0       0
  1394 ;;Total ram usage:        6 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 2
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_map
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404     023F                     ___wmul:	
  1405                           ;psect for function ___wmul
  1406                           
  1407     023F                     l1297:	
  1408                           ;incstack = 0
  1409                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1410                           
  1411     023F  01F4               	clrf	___wmul@product
  1412     0240  01F5               	clrf	___wmul@product+1
  1413     0241                     l1299:
  1414     0241  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0242  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0243  1C20               	btfss	___wmul@multiplier,0
  1417     0244  2A46               	goto	u551
  1418     0245  2A47               	goto	u550
  1419     0246                     u551:
  1420     0246  2A4D               	goto	l259
  1421     0247                     u550:
  1422     0247                     l1301:
  1423     0247  0822               	movf	___wmul@multiplicand,w
  1424     0248  07F4               	addwf	___wmul@product,f
  1425     0249  1803               	skipnc
  1426     024A  0AF5               	incf	___wmul@product+1,f
  1427     024B  0823               	movf	___wmul@multiplicand+1,w
  1428     024C  07F5               	addwf	___wmul@product+1,f
  1429     024D                     l259:
  1430     024D  3001               	movlw	1
  1431     024E                     u565:
  1432     024E  1003               	clrc
  1433     024F  0DA2               	rlf	___wmul@multiplicand,f
  1434     0250  0DA3               	rlf	___wmul@multiplicand+1,f
  1435     0251  3EFF               	addlw	-1
  1436     0252  1D03               	skipz
  1437     0253  2A4E               	goto	u565
  1438     0254                     l1303:
  1439     0254  3001               	movlw	1
  1440     0255                     u575:
  1441     0255  1003               	clrc
  1442     0256  0CA1               	rrf	___wmul@multiplier+1,f
  1443     0257  0CA0               	rrf	___wmul@multiplier,f
  1444     0258  3EFF               	addlw	-1
  1445     0259  1D03               	skipz
  1446     025A  2A55               	goto	u575
  1447     025B                     l1305:
  1448     025B  0820               	movf	___wmul@multiplier,w
  1449     025C  0421               	iorwf	___wmul@multiplier+1,w
  1450     025D  1D03               	btfss	3,2
  1451     025E  2A60               	goto	u581
  1452     025F  2A61               	goto	u580
  1453     0260                     u581:
  1454     0260  2A41               	goto	l1299
  1455     0261                     u580:
  1456     0261                     l1307:
  1457     0261  0875               	movf	___wmul@product+1,w
  1458     0262  00A1               	movwf	?___wmul+1
  1459     0263  0874               	movf	___wmul@product,w
  1460     0264  00A0               	movwf	?___wmul
  1461     0265                     l261:
  1462     0265  0008               	return
  1463     0266                     __end_of___wmul:
  1464                           
  1465                           	psect	text6
  1466     0136                     __ptext6:	
  1467 ;; *************** function ___awdiv *****************
  1468 ;; Defined at:
  1469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  divisor         2    4[BANK0 ] int 
  1472 ;;  dividend        2    6[BANK0 ] int 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  quotient        2   10[BANK0 ] int 
  1475 ;;  sign            1    9[BANK0 ] unsigned char 
  1476 ;;  counter         1    8[BANK0 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    4[BANK0 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       4       0       0       0
  1487 ;;      Locals:         0       4       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         1       8       0       0       0
  1490 ;;Total ram usage:        9 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 2
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_map
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     0136                     ___awdiv:	
  1501                           ;psect for function ___awdiv
  1502                           
  1503     0136                     l1311:	
  1504                           ;incstack = 0
  1505                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1506                           
  1507     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1508     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1509     0138  01A9               	clrf	___awdiv@sign
  1510     0139                     l1313:
  1511     0139  1FA5               	btfss	___awdiv@divisor+1,7
  1512     013A  293C               	goto	u591
  1513     013B  293D               	goto	u590
  1514     013C                     u591:
  1515     013C  2944               	goto	l1319
  1516     013D                     u590:
  1517     013D                     l1315:
  1518     013D  09A4               	comf	___awdiv@divisor,f
  1519     013E  09A5               	comf	___awdiv@divisor+1,f
  1520     013F  0AA4               	incf	___awdiv@divisor,f
  1521     0140  1903               	skipnz
  1522     0141  0AA5               	incf	___awdiv@divisor+1,f
  1523     0142                     l1317:
  1524     0142  01A9               	clrf	___awdiv@sign
  1525     0143  0AA9               	incf	___awdiv@sign,f
  1526     0144                     l1319:
  1527     0144  1FA7               	btfss	___awdiv@dividend+1,7
  1528     0145  2947               	goto	u601
  1529     0146  2948               	goto	u600
  1530     0147                     u601:
  1531     0147  2951               	goto	l1325
  1532     0148                     u600:
  1533     0148                     l1321:
  1534     0148  09A6               	comf	___awdiv@dividend,f
  1535     0149  09A7               	comf	___awdiv@dividend+1,f
  1536     014A  0AA6               	incf	___awdiv@dividend,f
  1537     014B  1903               	skipnz
  1538     014C  0AA7               	incf	___awdiv@dividend+1,f
  1539     014D                     l1323:
  1540     014D  3001               	movlw	1
  1541     014E  00F6               	movwf	??___awdiv
  1542     014F  0876               	movf	??___awdiv,w
  1543     0150  06A9               	xorwf	___awdiv@sign,f
  1544     0151                     l1325:
  1545     0151  01AA               	clrf	___awdiv@quotient
  1546     0152  01AB               	clrf	___awdiv@quotient+1
  1547     0153                     l1327:
  1548     0153  0824               	movf	___awdiv@divisor,w
  1549     0154  0425               	iorwf	___awdiv@divisor+1,w
  1550     0155  1903               	btfsc	3,2
  1551     0156  2958               	goto	u611
  1552     0157  2959               	goto	u610
  1553     0158                     u611:
  1554     0158  2990               	goto	l1347
  1555     0159                     u610:
  1556     0159                     l1329:
  1557     0159  01A8               	clrf	___awdiv@counter
  1558     015A  0AA8               	incf	___awdiv@counter,f
  1559     015B  2967               	goto	l1335
  1560     015C                     l1331:
  1561     015C  3001               	movlw	1
  1562     015D                     u625:
  1563     015D  1003               	clrc
  1564     015E  0DA4               	rlf	___awdiv@divisor,f
  1565     015F  0DA5               	rlf	___awdiv@divisor+1,f
  1566     0160  3EFF               	addlw	-1
  1567     0161  1D03               	skipz
  1568     0162  295D               	goto	u625
  1569     0163                     l1333:
  1570     0163  3001               	movlw	1
  1571     0164  00F6               	movwf	??___awdiv
  1572     0165  0876               	movf	??___awdiv,w
  1573     0166  07A8               	addwf	___awdiv@counter,f
  1574     0167                     l1335:
  1575     0167  1FA5               	btfss	___awdiv@divisor+1,7
  1576     0168  296A               	goto	u631
  1577     0169  296B               	goto	u630
  1578     016A                     u631:
  1579     016A  295C               	goto	l1331
  1580     016B                     u630:
  1581     016B                     l1337:
  1582     016B  3001               	movlw	1
  1583     016C                     u645:
  1584     016C  1003               	clrc
  1585     016D  0DAA               	rlf	___awdiv@quotient,f
  1586     016E  0DAB               	rlf	___awdiv@quotient+1,f
  1587     016F  3EFF               	addlw	-1
  1588     0170  1D03               	skipz
  1589     0171  296C               	goto	u645
  1590     0172  0825               	movf	___awdiv@divisor+1,w
  1591     0173  0227               	subwf	___awdiv@dividend+1,w
  1592     0174  1D03               	skipz
  1593     0175  2978               	goto	u655
  1594     0176  0824               	movf	___awdiv@divisor,w
  1595     0177  0226               	subwf	___awdiv@dividend,w
  1596     0178                     u655:
  1597     0178  1C03               	skipc
  1598     0179  297B               	goto	u651
  1599     017A  297C               	goto	u650
  1600     017B                     u651:
  1601     017B  2983               	goto	l1343
  1602     017C                     u650:
  1603     017C                     l1339:
  1604     017C  0824               	movf	___awdiv@divisor,w
  1605     017D  02A6               	subwf	___awdiv@dividend,f
  1606     017E  0825               	movf	___awdiv@divisor+1,w
  1607     017F  1C03               	skipc
  1608     0180  03A7               	decf	___awdiv@dividend+1,f
  1609     0181  02A7               	subwf	___awdiv@dividend+1,f
  1610     0182                     l1341:
  1611     0182  142A               	bsf	___awdiv@quotient,0
  1612     0183                     l1343:
  1613     0183  3001               	movlw	1
  1614     0184                     u665:
  1615     0184  1003               	clrc
  1616     0185  0CA5               	rrf	___awdiv@divisor+1,f
  1617     0186  0CA4               	rrf	___awdiv@divisor,f
  1618     0187  3EFF               	addlw	-1
  1619     0188  1D03               	skipz
  1620     0189  2984               	goto	u665
  1621     018A                     l1345:
  1622     018A  3001               	movlw	1
  1623     018B  02A8               	subwf	___awdiv@counter,f
  1624     018C  1D03               	btfss	3,2
  1625     018D  298F               	goto	u671
  1626     018E  2990               	goto	u670
  1627     018F                     u671:
  1628     018F  296B               	goto	l1337
  1629     0190                     u670:
  1630     0190                     l1347:
  1631     0190  0829               	movf	___awdiv@sign,w
  1632     0191  1903               	btfsc	3,2
  1633     0192  2994               	goto	u681
  1634     0193  2995               	goto	u680
  1635     0194                     u681:
  1636     0194  299A               	goto	l1351
  1637     0195                     u680:
  1638     0195                     l1349:
  1639     0195  09AA               	comf	___awdiv@quotient,f
  1640     0196  09AB               	comf	___awdiv@quotient+1,f
  1641     0197  0AAA               	incf	___awdiv@quotient,f
  1642     0198  1903               	skipnz
  1643     0199  0AAB               	incf	___awdiv@quotient+1,f
  1644     019A                     l1351:
  1645     019A  082B               	movf	___awdiv@quotient+1,w
  1646     019B  00A5               	movwf	?___awdiv+1
  1647     019C  082A               	movf	___awdiv@quotient,w
  1648     019D  00A4               	movwf	?___awdiv
  1649     019E                     l412:
  1650     019E  0008               	return
  1651     019F                     __end_of___awdiv:
  1652                           
  1653                           	psect	text7
  1654     02A2                     __ptext7:	
  1655 ;; *************** function _incModo *****************
  1656 ;; Defined at:
  1657 ;;		line 346 in file "main.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0
  1674 ;;      Totals:         0       0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 2
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685     02A2                     _incModo:	
  1686                           ;psect for function _incModo
  1687                           
  1688     02A2                     l1183:	
  1689                           ;incstack = 0
  1690                           ; Regs used in _incModo: [wreg+status,2+status,0]
  1691                           
  1692                           
  1693                           ;main.c: 347:     if (modo != 3){
  1694     02A2  3003               	movlw	3
  1695     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1696     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1697     02A5  063F               	xorwf	_modo,w
  1698     02A6  0440               	iorwf	_modo+1,w
  1699     02A7  1903               	btfsc	3,2
  1700     02A8  2AAA               	goto	u451
  1701     02A9  2AAB               	goto	u450
  1702     02AA                     u451:
  1703     02AA  2AB2               	goto	l1187
  1704     02AB                     u450:
  1705     02AB                     l1185:
  1706                           
  1707                           ;main.c: 348:         modo ++;
  1708     02AB  3001               	movlw	1
  1709     02AC  07BF               	addwf	_modo,f
  1710     02AD  1803               	skipnc
  1711     02AE  0AC0               	incf	_modo+1,f
  1712     02AF  3000               	movlw	0
  1713     02B0  07C0               	addwf	_modo+1,f
  1714                           
  1715                           ;main.c: 349:     }
  1716     02B1  2AB6               	goto	l155
  1717     02B2                     l1187:
  1718                           
  1719                           ;main.c: 351:         modo = 1;
  1720     02B2  3001               	movlw	1
  1721     02B3  00BF               	movwf	_modo
  1722     02B4  3000               	movlw	0
  1723     02B5  00C0               	movwf	_modo+1
  1724     02B6                     l155:
  1725     02B6  0008               	return
  1726     02B7                     __end_of_incModo:
  1727                           
  1728                           	psect	text8
  1729     01DA                     __ptext8:	
  1730 ;; *************** function _isr *****************
  1731 ;; Defined at:
  1732 ;;		line 59 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          2       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 1
  1753 ;; This function calls:
  1754 ;;		_delay
  1755 ;; This function is called by:
  1756 ;;		Interrupt level 1
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760     01DA                     _isr:	
  1761                           ;psect for function _isr
  1762                           
  1763     01DA                     i1l1193:
  1764                           
  1765                           ;main.c: 63:     if (PIR1bits.TXIF){
  1766     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1767     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1768     01DC  1E0C               	btfss	12,4	;volatile
  1769     01DD  29DF               	goto	u46_21
  1770     01DE  29E0               	goto	u46_20
  1771     01DF                     u46_21:
  1772     01DF  29E1               	goto	i1l103
  1773     01E0                     u46_20:
  1774     01E0                     i1l1195:
  1775                           
  1776                           ;main.c: 64:         PIR1bits.TXIF = 0;
  1777     01E0  120C               	bcf	12,4	;volatile
  1778     01E1                     i1l103:	
  1779                           ;main.c: 65:     }
  1780                           
  1781                           
  1782                           ;main.c: 67:     if (PIR1bits.ADIF){
  1783     01E1  1F0C               	btfss	12,6	;volatile
  1784     01E2  29E4               	goto	u47_21
  1785     01E3  29E5               	goto	u47_20
  1786     01E4                     u47_21:
  1787     01E4  29E6               	goto	i1l104
  1788     01E5                     u47_20:
  1789     01E5                     i1l1197:
  1790                           
  1791                           ;main.c: 69:         PIR1bits.ADIF=0;
  1792     01E5  130C               	bcf	12,6	;volatile
  1793     01E6                     i1l104:	
  1794                           ;main.c: 70:     }
  1795                           
  1796                           
  1797                           ;main.c: 72:     if (INTCONbits.T0IF){
  1798     01E6  1D0B               	btfss	11,2	;volatile
  1799     01E7  29E9               	goto	u48_21
  1800     01E8  29EA               	goto	u48_20
  1801     01E9                     u48_21:
  1802     01E9  2A07               	goto	i1l106
  1803     01EA                     u48_20:
  1804     01EA                     i1l1199:
  1805                           
  1806                           ;main.c: 73:         INTCONbits.T0IF = 0;
  1807     01EA  110B               	bcf	11,2	;volatile
  1808     01EB                     i1l1201:
  1809                           
  1810                           ;main.c: 74:         TMR0 = 100;
  1811     01EB  3064               	movlw	100
  1812     01EC  0081               	movwf	1	;volatile
  1813     01ED                     i1l1203:
  1814                           
  1815                           ;main.c: 76:         PORTAbits.RA7 = 1;
  1816     01ED  1785               	bsf	5,7	;volatile
  1817     01EE                     i1l1205:
  1818                           
  1819                           ;main.c: 77:         delay(ADC_Voltaje3);
  1820     01EE  0878               	movf	_ADC_Voltaje3+1,w
  1821     01EF  00F1               	movwf	delay@micro+1
  1822     01F0  0877               	movf	_ADC_Voltaje3,w
  1823     01F1  00F0               	movwf	delay@micro
  1824     01F2  120A  118A  22B7  120A  118A  	fcall	_delay
  1825     01F7                     i1l1207:
  1826                           
  1827                           ;main.c: 78:         PORTAbits.RA7 = 0;
  1828     01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1829     01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1830     01F9  1385               	bcf	5,7	;volatile
  1831     01FA                     i1l1209:
  1832                           
  1833                           ;main.c: 79:         PORTAbits.RA6 = 1;
  1834     01FA  1705               	bsf	5,6	;volatile
  1835     01FB                     i1l1211:
  1836                           
  1837                           ;main.c: 80:         delay(ADC_Voltaje4);
  1838     01FB  083A               	movf	_ADC_Voltaje4+1,w
  1839     01FC  00F1               	movwf	delay@micro+1
  1840     01FD  0839               	movf	_ADC_Voltaje4,w
  1841     01FE  00F0               	movwf	delay@micro
  1842     01FF  120A  118A  22B7  120A  118A  	fcall	_delay
  1843     0204                     i1l1213:
  1844                           
  1845                           ;main.c: 81:         PORTAbits.RA6 = 0;
  1846     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1847     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1848     0206  1305               	bcf	5,6	;volatile
  1849     0207                     i1l106:
  1850     0207  0873               	movf	??_isr+1,w
  1851     0208  008A               	movwf	10
  1852     0209  0E72               	swapf	??_isr,w
  1853     020A  0083               	movwf	3
  1854     020B  0EFE               	swapf	btemp,f
  1855     020C  0E7E               	swapf	btemp,w
  1856     020D  0009               	retfie
  1857     020E                     __end_of_isr:
  1858                           
  1859                           	psect	intentry
  1860     0004                     __pintentry:	
  1861                           ;incstack = 0
  1862                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1863                           
  1864     0004                     interrupt_function:
  1865     007E                     saved_w	set	btemp
  1866     0004  00FE               	movwf	btemp
  1867     0005  0E03               	swapf	3,w
  1868     0006  00F2               	movwf	??_isr
  1869     0007  080A               	movf	10,w
  1870     0008  00F3               	movwf	??_isr+1
  1871     0009  120A  118A  29DA   	ljmp	_isr
  1872                           
  1873                           	psect	text9
  1874     02B7                     __ptext9:	
  1875 ;; *************** function _delay *****************
  1876 ;; Defined at:
  1877 ;;		line 355 in file "main.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  micro           2    0[COMMON] unsigned int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         2       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0
  1894 ;;      Totals:         2       0       0       0       0
  1895 ;;Total ram usage:        2 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_isr
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     02B7                     _delay:	
  1905                           ;psect for function _delay
  1906                           
  1907     02B7                     i1l1099:	
  1908                           ;incstack = 0
  1909                           ; Regs used in _delay: [wreg+status,2+status,0]
  1910                           
  1911                           
  1912                           ;main.c: 356:     while (micro > 0){
  1913     02B7  2AC1               	goto	i1l1103
  1914     02B8                     i1l159:
  1915                           
  1916                           ;main.c: 357:         _delay((unsigned long)((50)*(500000/4000000.0)));
  1917     02B8  2AB9               	nop2	;2 cycle nop
  1918     02B9  2ABA               	nop2	;2 cycle nop
  1919     02BA  2ABB               	nop2	;2 cycle nop
  1920     02BB                     i1l1101:
  1921                           
  1922                           ;main.c: 358:         micro--;
  1923     02BB  3001               	movlw	1
  1924     02BC  02F0               	subwf	delay@micro,f
  1925     02BD  3000               	movlw	0
  1926     02BE  1C03               	skipc
  1927     02BF  03F1               	decf	delay@micro+1,f
  1928     02C0  02F1               	subwf	delay@micro+1,f
  1929     02C1                     i1l1103:
  1930                           
  1931                           ;main.c: 356:     while (micro > 0){
  1932     02C1  0870               	movf	delay@micro,w
  1933     02C2  0471               	iorwf	delay@micro+1,w
  1934     02C3  1D03               	btfss	3,2
  1935     02C4  2AC6               	goto	u43_21
  1936     02C5  2AC7               	goto	u43_20
  1937     02C6                     u43_21:
  1938     02C6  2AB8               	goto	i1l159
  1939     02C7                     u43_20:
  1940     02C7                     i1l161:
  1941     02C7  0008               	return
  1942     02C8                     __end_of_delay:
  1943     007E                     btemp	set	126	;btemp
  1944     007E                     wtemp0	set	126
  1945                           
  1946                           	psect	idloc
  1947                           
  1948                           ;Config register IDLOC0 @ 0x2000
  1949                           ;	unspecified, using default values
  1950     2000                     	org	8192
  1951     2000  3FFF               	dw	16383
  1952                           
  1953                           ;Config register IDLOC1 @ 0x2001
  1954                           ;	unspecified, using default values
  1955     2001                     	org	8193
  1956     2001  3FFF               	dw	16383
  1957                           
  1958                           ;Config register IDLOC2 @ 0x2002
  1959                           ;	unspecified, using default values
  1960     2002                     	org	8194
  1961     2002  3FFF               	dw	16383
  1962                           
  1963                           ;Config register IDLOC3 @ 0x2003
  1964                           ;	unspecified, using default values
  1965     2003                     	org	8195
  1966     2003  3FFF               	dw	16383
  1967                           
  1968                           	psect	config
  1969                           
  1970                           ;Config register CONFIG1 @ 0x2007
  1971                           ;	Oscillator Selection bits
  1972                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1973                           ;	Watchdog Timer Enable bit
  1974                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1975                           ;	Power-up Timer Enable bit
  1976                           ;	PWRTE = OFF, PWRT disabled
  1977                           ;	RE3/MCLR pin function select bit
  1978                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1979                           ;	Code Protection bit
  1980                           ;	CP = OFF, Program memory code protection is disabled
  1981                           ;	Data Code Protection bit
  1982                           ;	CPD = OFF, Data memory code protection is disabled
  1983                           ;	Brown Out Reset Selection bits
  1984                           ;	BOREN = OFF, BOR disabled
  1985                           ;	Internal External Switchover bit
  1986                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1987                           ;	Fail-Safe Clock Monitor Enabled bit
  1988                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1989                           ;	Low Voltage Programming Enable bit
  1990                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1991                           ;	In-Circuit Debugger Mode bit
  1992                           ;	DEBUG = 0x1, unprogramme  1993     2007                     	org	8199
  1994     2007  20D4               	dw	8404
  1995                           
  1996                           ;Config register CONFIG2 @ 0x2008
  1997                           ;	Brown-out Reset Selection bit
  1998                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1999                           ;	Flash Program Memory Self Write Enable bits
  2000                           ;	WRT = OFF, Write protection off
  2001     2008                     	org	8200
  2002     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     25      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    _isr->_delay

Critical Paths under _main in BANK0

    _main->_map
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2598
                                             24 BANK0      1     1      0
                            _incModo
                                _map
                              _setup
                           _setupADC
                           _setupPWM
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map                                                 12     4      8    2598
                                             12 BANK0     12     4      8
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              6 COMMON     1     1      0
                                              4 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _incModo                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0     175
                                              2 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _incModo
   _map
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup
   _setupADC
   _setupPWM

 _isr (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 17 22:35:23 2022

            map@inputmax 002E              map@inputmin 002C             ___awdiv@sign 0029  
    ___wmul@multiplicand 0022                      l121 0089                      l113 003B  
                    l131 0119                      l132 011D                      l124 00BF  
                    l141 0282                      l117 0045                      l150 02A1  
                    l118 0053                      l143 0286                      l127 00F3  
                    l144 028A                      l138 023E                      l155 02B6  
                    l412 019E                      l164 01D9                      l261 0265  
                    l259 024D                      _PR2 0092                      u600 0148  
                    u440 0286                      u601 0147                      u441 0285  
                    u450 02AB                      u610 0159                      u451 02AA  
                    u611 0158                      u700 003F                      u701 003E  
                    u630 016B                      u550 0247                      u710 0057  
                    u631 016A                      u551 0246                      u711 0056  
                    u720 008D                      u625 015D                      u721 008C  
                    u650 017C                      u730 00C3                      u651 017B  
                    u731 00C2                      u580 0261                      u740 00F7  
                    u645 016C                      u581 0260                      u565 024E  
                    u741 00F6                      u670 0190                      u590 013D  
                    u671 018F                      u655 0178                      u591 013C  
                    u575 0255                      u807 00E2                      u680 0195  
                    u681 0194                      u665 0184                      u817 00EE  
                    u690 003B                      u827 0116                      u691 003A  
                    u837 029E                      u757 004E                      u767 0078  
                    u777 0084                      u787 00AE                      u797 00BA  
                    _map 019F                      _isr 01DA                     l1111 0218  
                   l1121 0222                     l1113 021A                     l1105 020E  
                   l1131 022C                     l1123 0223                     l1115 021D  
                   l1107 0212                     l1301 0247                     l1141 0235  
                   l1133 022D                     l1125 0224                     l1117 0220  
                   l1109 0213                     l1311 0136                     l1303 0254  
                   l1143 0239                     l1135 022E                     l1127 022A  
                   l1119 0221                     l1151 0294                     l1321 0148  
                   l1313 0139                     l1305 025B                     l1145 023D  
                   l1137 0231                     l1129 022B                     l1153 0295  
                   l1161 0266                     l1401 00DE                     l1331 015C  
                   l1323 014D                     l1315 013D                     l1307 0261  
                   l1139 0234                     l1155 029A                     l1147 028B  
                   l1171 0276                     l1163 026A                     l1411 0112  
                   l1403 00E4                     l1341 0182                     l1333 0163  
                   l1325 0151                     l1317 0142                     l1157 029B  
                   l1149 0291                     l1181 0281                     l1173 027A  
                   l1165 026C                     l1405 00EA                     l1183 02A2  
                   l1351 019A                     l1343 0183                     l1335 0167  
                   l1327 0153                     l1319 0144                     l1159 029C  
                   l1175 027B                     l1167 0270                     l1407 00F0  
                   l1415 0121                     l1185 02AB                     l1345 018A  
                   l1337 016B                     l1329 0159                     l1177 027E  
                   l1169 0274                     l1441 0128                     l1409 00F7  
                   l1361 002F                     l1187 02B2                     l1339 017C  
                   l1347 0190                     l1355 01A2                     l1179 027F  
                   l1371 004A                     l1363 0035                     l1349 0195  
                   l1381 007A                     l1373 0050                     l1391 00AA  
                   l1383 0080                     l1375 0057                     l1367 003F  
                   l1359 0020                     l1297 023F                     l1393 00B0  
                   l1385 0086                     l1377 0072                     l1369 0048  
                   l1299 0241                     l1395 00B6                     l1387 008D  
                   l1379 0074                     l1397 00BC                     l1389 00A8  
                   l1399 00C3                     ?_map 002C                     ?_isr 0070  
                   _TMR0 0001                     _TXIF 0064                     _main 0020  
                   _modo 003F                     btemp 007E                     start 000C  
                  ??_map 0034                    ??_isr 0072                    ?_main 0070  
        __end_of___awdiv 019F                    _ANSEL 0188          ___awdiv@divisor 0024  
                  i1l103 01E1                    i1l104 01E6                    i1l106 0207  
                  i1l161 02C7                    i1l159 02B8          ___awdiv@counter 0028  
                  _SPBRG 0099                    u43_20 02C7                    u43_21 02C6  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 01E0  
                  u46_21 01DF                    u47_20 01E5                    u47_21 01E4  
                  u48_20 01EA                    u48_21 01E9                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019          __end_of_incModo 02B7  
                  _delay 02B7                    _setup 020E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0136                   ??_main 0038             _ADC_Voltaje1 003D  
           _ADC_Voltaje2 003B             _ADC_Voltaje3 0077             _ADC_Voltaje4 0039  
                 ?_delay 0070                   _ADRESH 001E                   _CCPR1L 0015  
                 _CCPR2L 001B         ___awdiv@dividend 0026                   ?_setup 0070  
                 _ANSELH 0189                   i1l1101 02BB                   i1l1103 02C1  
                 i1l1201 01EB                   i1l1211 01FB                   i1l1203 01ED  
                 i1l1213 0204                   i1l1205 01EE                   i1l1207 01F7  
                 i1l1209 01FA                   i1l1193 01DA                   i1l1099 02B7  
                 i1l1195 01E0                   i1l1197 01E5                   i1l1199 01EA  
                 ___wmul 023F                ??___awdiv 0076         ___awdiv@quotient 002A  
              ??_incModo 0074         __end_of_setupADC 02A2         __end_of_setupPWM 028B  
                 saved_w 007E  __end_of__initialization 001C           __pcstackCOMMON 0070  
          __end_of_delay 02C8            __end_of_setup 023F           _OPTION_REGbits 0081  
                ??_delay 0072                  ??_setup 0074               __pbssBANK0 0039  
             __pmaintext 0020                  ?___wmul 0020               __pintentry 0004  
              ?_setupADC 0070                ?_setupPWM 0070                  ___awdiv 0136  
                __ptext1 0266                  __ptext2 028B                  __ptext3 020E  
                __ptext4 019F                  __ptext5 023F                  __ptext6 0136  
                __ptext7 02A2                  __ptext8 01DA                  __ptext9 02B7  
                _incModo 02A2                _T2CONbits 0012               delay@micro 0070  
   end_of_initialization 001C               ??_setupADC 0074                _RCSTAbits 0018  
             ??_setupPWM 0074                _PORTAbits 0005                _PORTDbits 0008  
              _PORTEbits 0009                _TRISCbits 0087              _CCP1CONbits 0017  
            _CCP2CONbits 001D                _TXSTAbits 0098           __end_of___wmul 0266  
    start_initialization 000F              __end_of_map 01DA              __end_of_isr 020E  
               ??___wmul 0074              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0024                 ?_incModo 0070  
      interrupt_function 0004           ___wmul@product 0074                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0020                map@outmax 0032                map@outmin 0030  
        _option_selected 0079                 _setupADC 028B                 _setupPWM 0266  
               map@value 0037               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
